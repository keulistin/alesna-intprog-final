{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction RequestListComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" for Employee \", ctx_r0.displayEmployeeId, \" \");\n  }\n}\nfunction RequestListComponent_tr_20_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const request_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", request_r3.Employee.User.email, \" (\", request_r3.Employee.User.role === \"Admin\" ? \"Admin User\" : \"Normal User\", \") \");\n  }\n}\nfunction RequestListComponent_tr_20_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const request_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", request_r3.userEmail, \" (\", request_r3.userRole === \"Admin\" ? \"Admin User\" : \"Normal User\", \") \");\n  }\n}\nfunction RequestListComponent_tr_20_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Unknown \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_tr_20_ul_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r12.name, \" (x\", item_r12.quantity, \") \");\n  }\n}\nfunction RequestListComponent_tr_20_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 11);\n    i0.ɵɵtemplate(1, RequestListComponent_tr_20_ul_8_li_1_Template, 2, 2, \"li\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const request_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", request_r3.requestItems);\n  }\n}\nfunction RequestListComponent_tr_20_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"No items\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"bg-warning text-dark\": a0,\n    \"bg-success\": a1,\n    \"bg-danger\": a2\n  };\n};\nconst _c1 = function (a1) {\n  return [\"edit\", a1];\n};\nfunction RequestListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, RequestListComponent_tr_20_span_4_Template, 2, 2, \"span\", 2);\n    i0.ɵɵtemplate(5, RequestListComponent_tr_20_span_5_Template, 2, 2, \"span\", 2);\n    i0.ɵɵtemplate(6, RequestListComponent_tr_20_span_6_Template, 2, 0, \"span\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, RequestListComponent_tr_20_ul_8_Template, 2, 1, \"ul\", 8);\n    i0.ɵɵtemplate(9, RequestListComponent_tr_20_span_9_Template, 2, 0, \"span\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"span\", 9);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 10);\n    i0.ɵɵtext(15, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const request_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(request_r3.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", request_r3.Employee == null ? null : request_r3.Employee.User == null ? null : request_r3.Employee.User.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(request_r3.Employee == null ? null : request_r3.Employee.User == null ? null : request_r3.Employee.User.email) && request_r3.userEmail);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(request_r3.Employee == null ? null : request_r3.Employee.User == null ? null : request_r3.Employee.User.email) && !request_r3.userEmail);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", request_r3.requestItems && request_r3.requestItems.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !request_r3.requestItems || request_r3.requestItems.length === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(9, _c0, request_r3.status === \"Pending\", request_r3.status === \"Approved\" || request_r3.status === \"Approve\", request_r3.status === \"Rejected\" || request_r3.status === \"Reject\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", request_r3.status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(13, _c1, request_r3.id));\n  }\n}\nfunction RequestListComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 12);\n    i0.ɵɵtext(2, \"No requests found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let RequestListComponent = /*#__PURE__*/(() => {\n  class RequestListComponent {\n    constructor(router, route, accountService, employeeService, requestService, alertService) {\n      this.router = router;\n      this.route = route;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.requests = [];\n      this.account = this.accountService.accountValue;\n      this.employeeId = null;\n      this.displayEmployeeId = null;\n      this.loading = false;\n    }\n    ngOnInit() {\n      // Get the employeeId from the route query parameters\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'];\n        if (this.employeeId) {\n          // If we have an employeeId, get the employee details to show in the header\n          this.employeeService.getById(this.employeeId).pipe(first()).subscribe({\n            next: employee => {\n              this.displayEmployeeId = employee.employeeId;\n              // Load requests filtered by this employee\n              this.loadRequestsByEmployeeId(this.employeeId);\n            },\n            error: error => {\n              console.error('Error loading employee details:', error);\n              this.alertService.error('Failed to load employee details');\n            }\n          });\n        } else {\n          // Otherwise load all requests\n          this.loadAllRequests();\n        }\n      });\n    }\n    loadAllRequests() {\n      this.loading = true;\n      this.requestService.getAll().pipe(first()).subscribe({\n        next: requests => {\n          console.log('Loaded requests:', requests);\n          this.requests = requests;\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading requests:', error);\n          this.alertService.error('Failed to load requests');\n          this.loading = false;\n        }\n      });\n    }\n    loadRequestsByEmployeeId(employeeId) {\n      // Get requests filtered by employee ID\n      this.loading = true;\n      this.requestService.getAll().pipe(first()).subscribe({\n        next: requests => {\n          // Filter requests to only show those for this employee\n          this.requests = requests.filter(r => {\n            var _a;\n            return ((_a = r.employeeId) === null || _a === void 0 ? void 0 : _a.toString()) === (employeeId === null || employeeId === void 0 ? void 0 : employeeId.toString());\n          });\n          console.log(`Loaded ${this.requests.length} requests for employee ID ${employeeId}`);\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading requests:', error);\n          this.alertService.error('Failed to load requests');\n          this.loading = false;\n        }\n      });\n    }\n    add() {\n      const route = ['add'];\n      if (this.employeeId) {\n        this.router.navigate(route, {\n          relativeTo: this.route,\n          queryParams: {\n            employeeId: this.employeeId\n          }\n        });\n      } else {\n        this.router.navigate(route, {\n          relativeTo: this.route\n        });\n      }\n    }\n    edit(id) {\n      const route = ['edit', id];\n      if (this.employeeId) {\n        this.router.navigate(route, {\n          relativeTo: this.route,\n          queryParams: {\n            employeeId: this.employeeId\n          }\n        });\n      } else {\n        this.router.navigate(route, {\n          relativeTo: this.route\n        });\n      }\n    }\n    delete(id) {\n      if (confirm('Are you sure you want to delete this request?')) {\n        this.requestService.delete(id).pipe(first()).subscribe({\n          next: () => {\n            this.requests = this.requests.filter(x => x.id !== id);\n            this.alertService.success('Request deleted successfully');\n          },\n          error: error => {\n            console.error('Error deleting request:', error);\n            this.alertService.error('Failed to delete request');\n          }\n        });\n      }\n    }\n  }\n  RequestListComponent.ɵfac = function RequestListComponent_Factory(t) {\n    return new (t || RequestListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i2.RequestService), i0.ɵɵdirectiveInject(i2.AlertService));\n  };\n  RequestListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RequestListComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"card\"], [1, \"card-header\"], [4, \"ngIf\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"add\", 1, \"btn\", \"btn-primary\", \"float-end\"], [\"class\", \"list-unstyled mb-0\", 4, \"ngIf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-1\", 3, \"routerLink\"], [1, \"list-unstyled\", \"mb-0\"], [\"colspan\", \"5\", 1, \"text-center\"]],\n    template: function RequestListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Requests \");\n        i0.ɵɵtemplate(3, RequestListComponent_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"table\", 5)(7, \"thead\")(8, \"tr\")(9, \"th\");\n        i0.ɵɵtext(10, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"tbody\");\n        i0.ɵɵtemplate(20, RequestListComponent_tr_20_Template, 16, 15, \"tr\", 6);\n        i0.ɵɵtemplate(21, RequestListComponent_tr_21_Template, 3, 0, \"tr\", 2);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"a\", 7);\n        i0.ɵɵtext(23, \"Add Request\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.employeeId && ctx.displayEmployeeId);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.requests);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.requests.length === 0);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.RouterLink],\n    encapsulation: 2\n  });\n  return RequestListComponent;\n})();","map":{"version":3,"mappings":"AAGA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;;ICAlCC,6BAAsD;IACpDA,YACF;IAAAA,0BAAe;;;;IADbA,eACF;IADEA,sEACF;;;;;IAkBUA,4BAA4C;IAC1CA,YACF;IAAAA,iBAAO;;;;IADLA,eACF;IADEA,gJACF;;;;;IACAA,4BAAkE;IAChEA,YACF;IAAAA,iBAAO;;;;IADLA,eACF;IADEA,4HACF;;;;;IACAA,4BAAmE;IACjEA,yBACF;IAAAA,iBAAO;;;;;IAILA,0BAA8C;IAC5CA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,yEACF;;;;;IAHFA,8BAA+F;IAC7FA,8EAEK;IACPA,iBAAK;;;;IAHkBA,eAAuB;IAAvBA,iDAAuB;;;;;IAI9CA,4BAAyE;IAAAA,wBAAQ;IAAAA,iBAAO;;;;;;;;;;;;;;;IAnB5FA,0BAAqC;IAC/BA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IACFA,6EAEO;IACPA,6EAEO;IACPA,6EAEO;IACTA,iBAAK;IACLA,0BAAI;IACFA,yEAIK;IACLA,6EAAwF;IAC1FA,iBAAK;IACLA,2BAAI;IAMAA,aACF;IAAAA,iBAAO;IAETA,2BAAI;IAC8EA,qBAAI;IAAAA,iBAAS;;;;IA9B3FA,eAAgB;IAAhBA,qCAAgB;IAEXA,eAAmC;IAAnCA,oIAAmC;IAGnCA,eAAyD;IAAzDA,+JAAyD;IAGzDA,eAA0D;IAA1DA,gKAA0D;IAKjCA,eAA6D;IAA7DA,oFAA6D;IAKtFA,eAAgE;IAAhEA,uFAAgE;IAGnDA,eAIlB;IAJkBA,8NAIlB;IACAA,eACF;IADEA,kDACF;IAG4CA,eAAmC;IAAnCA,uEAAmC;;;;;IAGnFA,0BAAkC;IACIA,iCAAiB;IAAAA,iBAAK;;;AD/CtE,WAAaC,oBAAoB;EAA3B,MAAOA,oBAAoB;IAO/BC,YACUC,MAAc,EACdC,KAAqB,EACrBC,cAA8B,EAC9BC,eAAgC,EAChCC,cAA8B,EAC9BC,YAA0B;MAL1B,WAAM,GAANL,MAAM;MACN,UAAK,GAALC,KAAK;MACL,mBAAc,GAAdC,cAAc;MACd,oBAAe,GAAfC,eAAe;MACf,mBAAc,GAAdC,cAAc;MACd,iBAAY,GAAZC,YAAY;MAZtB,aAAQ,GAAU,EAAE;MACpB,YAAO,GAAG,IAAI,CAACH,cAAc,CAACI,YAAY;MAC1C,eAAU,GAAkB,IAAI;MAChC,sBAAiB,GAAkB,IAAI;MACvC,YAAO,GAAG,KAAK;IASX;IAEJC,QAAQ;MACN;MACA,IAAI,CAACN,KAAK,CAACO,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;QACxC,IAAI,CAACC,UAAU,GAAGD,MAAM,CAAC,YAAY,CAAC;QAEtC,IAAI,IAAI,CAACC,UAAU,EAAE;UACnB;UACA,IAAI,CAACR,eAAe,CAACS,OAAO,CAAC,IAAI,CAACD,UAAU,CAAC,CAC1CE,IAAI,CAACjB,KAAK,EAAE,CAAC,CACba,SAAS,CAAC;YACTK,IAAI,EAAEC,QAAQ,IAAG;cACf,IAAI,CAACC,iBAAiB,GAAGD,QAAQ,CAACJ,UAAU;cAC5C;cACA,IAAI,CAACM,wBAAwB,CAAC,IAAI,CAACN,UAAU,CAAC;YAChD,CAAC;YACDO,KAAK,EAAEA,KAAK,IAAG;cACbC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;cACvD,IAAI,CAACb,YAAY,CAACa,KAAK,CAAC,iCAAiC,CAAC;YAC5D;WACD,CAAC;SACL,MAAM;UACL;UACA,IAAI,CAACE,eAAe,EAAE;;MAE1B,CAAC,CAAC;IACJ;IAEQA,eAAe;MACrB,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACjB,cAAc,CAACkB,MAAM,EAAE,CACzBT,IAAI,CAACjB,KAAK,EAAE,CAAC,CACba,SAAS,CAAC;QACTK,IAAI,EAAGS,QAAe,IAAI;UACxBJ,OAAO,CAACK,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAAC;UACzC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;UACxB,IAAI,CAACF,OAAO,GAAG,KAAK;QACtB,CAAC;QACDH,KAAK,EAAEA,KAAK,IAAG;UACbC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/C,IAAI,CAACb,YAAY,CAACa,KAAK,CAAC,yBAAyB,CAAC;UAClD,IAAI,CAACG,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;IACN;IAEQJ,wBAAwB,CAACN,UAAkB;MACjD;MACA,IAAI,CAACU,OAAO,GAAG,IAAI;MACnB,IAAI,CAACjB,cAAc,CAACkB,MAAM,EAAE,CACzBT,IAAI,CAACjB,KAAK,EAAE,CAAC,CACba,SAAS,CAAC;QACTK,IAAI,EAAGS,QAAe,IAAI;UACxB;UACA,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAACE,MAAM,CAACC,CAAC,IAAG;YAAA;YAAC,eAAC,CAACf,UAAU,0CAAEgB,QAAQ,EAAE,OAAKhB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEgB,QAAQ,EAAE;UAAA,EAAC;UACzFR,OAAO,CAACK,GAAG,CAAC,UAAU,IAAI,CAACD,QAAQ,CAACK,MAAM,6BAA6BjB,UAAU,EAAE,CAAC;UACpF,IAAI,CAACU,OAAO,GAAG,KAAK;QACtB,CAAC;QACDH,KAAK,EAAEA,KAAK,IAAG;UACbC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/C,IAAI,CAACb,YAAY,CAACa,KAAK,CAAC,yBAAyB,CAAC;UAClD,IAAI,CAACG,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;IACN;IAEAQ,GAAG;MACD,MAAM5B,KAAK,GAAG,CAAC,KAAK,CAAC;MACrB,IAAI,IAAI,CAACU,UAAU,EAAE;QACnB,IAAI,CAACX,MAAM,CAAC8B,QAAQ,CAAC7B,KAAK,EAAE;UAC1B8B,UAAU,EAAE,IAAI,CAAC9B,KAAK;UACtBO,WAAW,EAAE;YAAEG,UAAU,EAAE,IAAI,CAACA;UAAU;SAC3C,CAAC;OACH,MAAM;QACL,IAAI,CAACX,MAAM,CAAC8B,QAAQ,CAAC7B,KAAK,EAAE;UAAE8B,UAAU,EAAE,IAAI,CAAC9B;QAAK,CAAE,CAAC;;IAE3D;IAEA+B,IAAI,CAACC,EAAU;MACb,MAAMhC,KAAK,GAAG,CAAC,MAAM,EAAEgC,EAAE,CAAC;MAC1B,IAAI,IAAI,CAACtB,UAAU,EAAE;QACnB,IAAI,CAACX,MAAM,CAAC8B,QAAQ,CAAC7B,KAAK,EAAE;UAC1B8B,UAAU,EAAE,IAAI,CAAC9B,KAAK;UACtBO,WAAW,EAAE;YAAEG,UAAU,EAAE,IAAI,CAACA;UAAU;SAC3C,CAAC;OACH,MAAM;QACL,IAAI,CAACX,MAAM,CAAC8B,QAAQ,CAAC7B,KAAK,EAAE;UAAE8B,UAAU,EAAE,IAAI,CAAC9B;QAAK,CAAE,CAAC;;IAE3D;IAEAiC,MAAM,CAACD,EAAU;MACf,IAAIE,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5D,IAAI,CAAC/B,cAAc,CAAC8B,MAAM,CAACD,EAAE,CAAC,CAC3BpB,IAAI,CAACjB,KAAK,EAAE,CAAC,CACba,SAAS,CAAC;UACTK,IAAI,EAAE,MAAK;YACT,IAAI,CAACS,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACE,MAAM,CAACW,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;YACtD,IAAI,CAAC5B,YAAY,CAACgC,OAAO,CAAC,8BAA8B,CAAC;UAC3D,CAAC;UACDnB,KAAK,EAAEA,KAAK,IAAG;YACbC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;YAC/C,IAAI,CAACb,YAAY,CAACa,KAAK,CAAC,0BAA0B,CAAC;UACrD;SACD,CAAC;;IAER;;;qBAxHWpB,oBAAoB;EAAA;;UAApBA,oBAAoB;IAAAwC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCRjC7C,8BAAkB;QAEdA,0BACA;QAAAA,uFAEe;QACjBA,iBAAM;QACNA,8BAAuB;QAKTA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,yBAAQ;QAAAA,iBAAK;QACjBA,2BAAI;QAAAA,sBAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QACfA,2BAAI;QAAAA,wBAAO;QAAAA,iBAAK;QAGpBA,8BAAO;QACLA,uEAiCK;QACLA,qEAEK;QACPA,iBAAQ;QAGZA,6BAAsD;QAAAA,4BAAW;QAAAA,iBAAI;;;QAzDtDA,eAAqC;QAArCA,8DAAqC;QAiBtBA,gBAAW;QAAXA,sCAAW;QAkC9BA,eAA2B;QAA3BA,gDAA2B;;;;;;SD9C7BC,oBAAoB;AAAA","names":["first","i0","RequestListComponent","constructor","router","route","accountService","employeeService","requestService","alertService","accountValue","ngOnInit","queryParams","subscribe","params","employeeId","getById","pipe","next","employee","displayEmployeeId","loadRequestsByEmployeeId","error","console","loadAllRequests","loading","getAll","requests","log","filter","r","toString","length","add","navigate","relativeTo","edit","id","delete","confirm","x","success","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\requests\\list.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\requests\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AccountService, EmployeeService, RequestService, AlertService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  templateUrl: 'list.component.html'\n})\nexport class RequestListComponent implements OnInit {\n  requests: any[] = [];\n  account = this.accountService.accountValue;\n  employeeId: string | null = null;\n  displayEmployeeId: string | null = null;\n  loading = false;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private accountService: AccountService,\n    private employeeService: EmployeeService,\n    private requestService: RequestService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n    // Get the employeeId from the route query parameters\n    this.route.queryParams.subscribe(params => {\n      this.employeeId = params['employeeId'];\n      \n      if (this.employeeId) {\n        // If we have an employeeId, get the employee details to show in the header\n        this.employeeService.getById(this.employeeId)\n          .pipe(first())\n          .subscribe({\n            next: employee => {\n              this.displayEmployeeId = employee.employeeId;\n              // Load requests filtered by this employee\n              this.loadRequestsByEmployeeId(this.employeeId);\n            },\n            error: error => {\n              console.error('Error loading employee details:', error);\n              this.alertService.error('Failed to load employee details');\n            }\n          });\n      } else {\n        // Otherwise load all requests\n        this.loadAllRequests();\n      }\n    });\n  }\n\n  private loadAllRequests() {\n    this.loading = true;\n    this.requestService.getAll()\n      .pipe(first())\n      .subscribe({\n        next: (requests: any[]) => {\n          console.log('Loaded requests:', requests);\n          this.requests = requests;\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading requests:', error);\n          this.alertService.error('Failed to load requests');\n          this.loading = false;\n        }\n      });\n  }\n\n  private loadRequestsByEmployeeId(employeeId: string) {\n    // Get requests filtered by employee ID\n    this.loading = true;\n    this.requestService.getAll()\n      .pipe(first())\n      .subscribe({\n        next: (requests: any[]) => {\n          // Filter requests to only show those for this employee\n          this.requests = requests.filter(r => r.employeeId?.toString() === employeeId?.toString());\n          console.log(`Loaded ${this.requests.length} requests for employee ID ${employeeId}`);\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading requests:', error);\n          this.alertService.error('Failed to load requests');\n          this.loading = false;\n        }\n      });\n  }\n\n  add() {\n    const route = ['add'];\n    if (this.employeeId) {\n      this.router.navigate(route, { \n        relativeTo: this.route,\n        queryParams: { employeeId: this.employeeId } \n      });\n    } else {\n      this.router.navigate(route, { relativeTo: this.route });\n    }\n  }\n\n  edit(id: string) {\n    const route = ['edit', id];\n    if (this.employeeId) {\n      this.router.navigate(route, { \n        relativeTo: this.route,\n        queryParams: { employeeId: this.employeeId } \n      });\n    } else {\n      this.router.navigate(route, { relativeTo: this.route });\n    }\n  }\n\n  delete(id: string) {\n    if (confirm('Are you sure you want to delete this request?')) {\n      this.requestService.delete(id)\n        .pipe(first())\n        .subscribe({\n          next: () => {\n            this.requests = this.requests.filter(x => x.id !== id);\n            this.alertService.success('Request deleted successfully');\n          },\n          error: error => {\n            console.error('Error deleting request:', error);\n            this.alertService.error('Failed to delete request');\n          }\n        });\n    }\n  }\n}","<div class=\"card\">\n  <div class=\"card-header\">\n    Requests\n    <ng-container *ngIf=\"employeeId && displayEmployeeId\">\n      for Employee {{displayEmployeeId}}\n    </ng-container>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Employee</th>\n            <th>Items</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let request of requests\">\n            <td>{{request.type}}</td>\n            <td>\n              <span *ngIf=\"request.Employee?.User?.email\">\n                {{request.Employee.User.email}} ({{request.Employee.User.role === 'Admin' ? 'Admin User' : 'Normal User'}})\n              </span>\n              <span *ngIf=\"!request.Employee?.User?.email && request.userEmail\">\n                {{request.userEmail}} ({{request.userRole === 'Admin' ? 'Admin User' : 'Normal User'}})\n              </span>\n              <span *ngIf=\"!request.Employee?.User?.email && !request.userEmail\">\n                Unknown\n              </span>\n            </td>\n            <td>\n              <ul class=\"list-unstyled mb-0\" *ngIf=\"request.requestItems && request.requestItems.length > 0\">\n                <li *ngFor=\"let item of request.requestItems\">\n                  {{item.name}} (x{{item.quantity}})\n                </li>\n              </ul>\n              <span *ngIf=\"!request.requestItems || request.requestItems.length === 0\">No items</span>\n            </td>\n            <td>\n              <span class=\"badge\" [ngClass]=\"{\n                'bg-warning text-dark': request.status === 'Pending',\n                'bg-success': request.status === 'Approved' || request.status === 'Approve',\n                'bg-danger': request.status === 'Rejected' || request.status === 'Reject'\n              }\">\n                {{request.status}}\n              </span>\n            </td>\n            <td>\n              <button class=\"btn btn-sm btn-primary me-1\" [routerLink]=\"['edit', request.id]\">Edit</button>\n            </td>\n          </tr>\n          <tr *ngIf=\"requests.length === 0\">\n            <td colspan=\"5\" class=\"text-center\">No requests found</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <a routerLink=\"add\" class=\"btn btn-primary float-end\">Add Request</a>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}