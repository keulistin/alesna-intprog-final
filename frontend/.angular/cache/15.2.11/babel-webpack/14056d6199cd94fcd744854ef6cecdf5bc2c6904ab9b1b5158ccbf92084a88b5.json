{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction ListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\", 6)(14, \"a\", 7);\n    i0.ɵɵtext(15, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const account_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r2.role);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"edit/\", account_r2.id, \"\");\n  }\n}\nfunction ListComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 8);\n    i0.ɵɵelement(2, \"span\", 9);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(accountService) {\n      this.accountService = accountService;\n    }\n    ngOnInit() {\n      this.accountService.getAll().pipe(first()).subscribe(accounts => this.accounts = accounts);\n    }\n    deleteAccount(id) {\n      const account = this.accounts.find(x => x.id === id);\n      account.isDeleting = true;\n      this.accountService.delete(id).pipe(first()).subscribe(() => {\n        this.accounts = this.accounts.filter(x => x.id !== id);\n      });\n    }\n  }\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[\"routerLink\", \"add\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"mb-2\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"30%\"], [2, \"width\", \"10%\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [2, \"white-space\", \"nowrap\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"mr-1\", 3, \"routerLink\"], [\"colspan\", \"4\", 1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Accounts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"All accounts from secure (admin only) api end point:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"a\", 0);\n        i0.ɵɵtext(5, \"Create Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"table\", 1)(7, \"thead\")(8, \"tr\")(9, \"th\", 2);\n        i0.ɵɵtext(10, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 2);\n        i0.ɵɵtext(12, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\", 2);\n        i0.ɵɵtext(14, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 2);\n        i0.ɵɵtext(16, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\", 2);\n        i0.ɵɵtext(18, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\", 2);\n        i0.ɵɵtext(20, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"th\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, ListComponent_tr_23_Template, 16, 7, \"tr\", 4);\n        i0.ɵɵtemplate(24, ListComponent_tr_24_Template, 3, 0, \"tr\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.accounts);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n    encapsulation: 2\n  });\n  return ListComponent;\n})();","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;;ICgB9BC,0BAAqC;IAC7BA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,aAAkB;IAAAA,iBAAK;IAC3BA,2BAAI;IAAAA,aAAgB;IAAAA,iBAAK;IACzBA,8BAAgC;IAC4CA,qBAAI;IAAAA,iBAAI;;;;IAPhFA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAqB;IAArBA,0CAAqB;IACrBA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAgB;IAAhBA,qCAAgB;IAEbA,eAAgC;IAAhCA,mEAAgC;;;;;IAQ3CA,0BAAsB;IAEdA,0BAAmE;IACvEA,iBAAK;;;AD7BjB,WAAaC,aAAa;EAApB,MAAOA,aAAa;IAGtBC,YAAoBC,cAA8B;MAA9B,mBAAc,GAAdA,cAAc;IAAoB;IAEtDC,QAAQ;MACJ,IAAI,CAACD,cAAc,CAACE,MAAM,EAAE,CACvBC,IAAI,CAACP,KAAK,EAAE,CAAC,CACbQ,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;IACxD;IAEAC,aAAa,CAACC,EAAU;MACpB,MAAMC,OAAO,GAAG,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MACpDC,OAAO,CAACG,UAAU,GAAG,IAAI;MACzB,IAAI,CAACX,cAAc,CAACY,MAAM,CAACL,EAAE,CAAC,CACzBJ,IAAI,CAACP,KAAK,EAAE,CAAC,CACbQ,SAAS,CAAC,MAAK;QACZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACQ,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,CAAC;IACV;;;qBAnBST,aAAa;EAAA;;UAAbA,aAAa;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCP1BrB,0BAAI;QAAAA,wBAAQ;QAAAA,iBAAK;QACjBA,yBAAG;QAAAA,oEAAoD;QAAAA,iBAAI;QAC3DA,4BAAwD;QAAAA,8BAAc;QAAAA,iBAAI;QAE1EA,gCAAmC;QAGDA,sBAAK;QAAAA,iBAAK;QAChCA,8BAAsB;QAAAA,2BAAU;QAAAA,iBAAK;QACrCA,8BAAsB;QAAAA,0BAAS;QAAAA,iBAAK;QACpCA,8BAAsB;QAAAA,sBAAK;QAAAA,iBAAK;QAChCA,8BAAsB;QAAAA,uBAAM;QAAAA,iBAAK;QACjCA,8BAAsB;QAAAA,qBAAI;QAAAA,iBAAK;QAC/BA,yBAA2B;QAC/BA,iBAAK;QAETA,8BAAO;QACHA,+DAeK;QACLA,8DAIK;QACTA,iBAAQ;;;QArBoBA,gBAAW;QAAXA,sCAAW;QAgB9BA,eAAe;QAAfA,oCAAe;;;;;;SD1BfC,aAAa;AAAA","names":["first","i0","ListComponent","constructor","accountService","ngOnInit","getAll","pipe","subscribe","accounts","deleteAccount","id","account","find","x","isDeleting","delete","filter","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\admin\\accounts\\list.component.ts","E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\admin\\accounts\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService } from '@app/_services';\r\nimport { Account } from '@app/_models';\r\n\r\n@Component({ templateUrl: 'list.component.html' })\r\nexport class ListComponent implements OnInit {\r\n    accounts: any[];\r\n\r\n    constructor(private accountService: AccountService) { }\r\n\r\n    ngOnInit() {\r\n        this.accountService.getAll()\r\n            .pipe(first())\r\n            .subscribe(accounts => this.accounts = accounts);\r\n    }\r\n\r\n    deleteAccount(id: string) {\r\n        const account = this.accounts.find(x => x.id === id);\r\n        account.isDeleting = true;\r\n        this.accountService.delete(id)\r\n            .pipe(first())\r\n            .subscribe(() => {\r\n                this.accounts = this.accounts.filter(x => x.id !== id);\r\n            });\r\n    }\r\n}","<h1>Accounts</h1>\r\n<p>All accounts from secure (admin only) api end point:</p>\r\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Create Account</a>\r\n\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"width:30%\">Title</th>\r\n            <th style=\"width:30%\">First Name</th>\r\n            <th style=\"width:30%\">Last Name</th>\r\n            <th style=\"width:30%\">Email</th>\r\n            <th style=\"width:30%\">Status</th>\r\n            <th style=\"width:30%\">Role</th>\r\n            <th style=\"width:10%\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let account of accounts\">\r\n            <td>{{account.title}}</td>\r\n            <td>{{account.firstName}}</td>\r\n            <td>{{account.lastName}}</td>\r\n            <td>{{account.email}}</td>\r\n            <td>{{account.status}}</td>\r\n            <td>{{account.role}}</td>\r\n            <td style=\"white-space: nowrap\">\r\n                <a routerLink=\"edit/{{account.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\r\n                <!-- <button (click)=\"deleteAccount(account.id)\" class=\"btn btn-sm btn-danger btn-delete-account\"\r\n                    [disabled]=\"account.isDeleting\">\r\n                    <span *ngIf=\"account.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\r\n                    <span *ngIf=\"!account.isDeleting\">Delete</span>\r\n                </button> -->\r\n            </td>\r\n        </tr>\r\n        <tr *ngIf=\"!accounts\">\r\n            <td colspan=\"4\" class=\"text-center\">\r\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}