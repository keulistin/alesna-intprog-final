{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services/account.service\";\nimport * as i3 from \"@app/_services/alert.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AddEditEmployeeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditEmployeeComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r3.email);\n  }\n}\nfunction AddEditEmployeeComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r4.name);\n  }\n}\nexport let AddEditEmployeeComponent = /*#__PURE__*/(() => {\n  class AddEditEmployeeComponent {\n    constructor(route, router, accountService, alertService) {\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.employee = {\n        employeeId: '',\n        userId: null,\n        position: '',\n        departmentId: null,\n        hireDate: null,\n        status: 'Active'\n      };\n      this.users = [];\n      this.departments = [];\n      this.errorMessage = '';\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Load users and departments\n      this.loadUsers();\n      this.loadDepartments();\n      if (!this.isAddMode) {\n        this.loadEmployee();\n      }\n    }\n    loadUsers() {\n      this.accountService.getAllUsers().pipe(first()).subscribe(users => this.users = users);\n    }\n    loadDepartments() {\n      this.accountService.getAllDepartments().pipe(first()).subscribe(departments => this.departments = departments);\n    }\n    loadEmployee() {\n      this.loading = true;\n      this.accountService.getEmployeeById(this.id).pipe(first()).subscribe({\n        next: employee => {\n          this.employee = employee;\n          this.loading = false;\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    save() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.loading) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      this.accountService.createEmployee(this.employee).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      this.accountService.updateEmployee(this.id, this.employee).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    cancel() {\n      this.router.navigate(['/employees']);\n    }\n  }\n  AddEditEmployeeComponent.ɵfac = function AddEditEmployeeComponent_Factory(t) {\n    return new (t || AddEditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditEmployeeComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 40,\n    vars: 11,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"]],\n    template: function AddEditEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditEmployeeComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.employee.employeeId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_select_ngModelChange_12_listener($event) {\n          return ctx.employee.userId = $event;\n        });\n        i0.ɵɵtemplate(13, AddEditEmployeeComponent_option_13_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 5);\n        i0.ɵɵtext(16, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.employee.position = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 5);\n        i0.ɵɵtext(20, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_select_ngModelChange_21_listener($event) {\n          return ctx.employee.departmentId = $event;\n        });\n        i0.ɵɵtemplate(22, AddEditEmployeeComponent_option_22_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 5);\n        i0.ɵɵtext(25, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.employee.hireDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 5);\n        i0.ɵɵtext(29, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_select_ngModelChange_30_listener($event) {\n          return ctx.employee.status = $event;\n        });\n        i0.ɵɵelementStart(31, \"option\");\n        i0.ɵɵtext(32, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\");\n        i0.ɵɵtext(34, \"Inactive\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 11)(36, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_button_click_36_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(37, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_button_click_38_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(39, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Employee\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeId)(\"disabled\", !!ctx.id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.userId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.position);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.departmentId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.hireDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.status);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n    encapsulation: 2\n  });\n  return AddEditEmployeeComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","i0","AddEditEmployeeComponent","constructor","route","router","accountService","alertService","employeeId","userId","position","departmentId","hireDate","status","ngOnInit","id","snapshot","params","isAddMode","loadUsers","loadDepartments","loadEmployee","getAllUsers","pipe","subscribe","users","getAllDepartments","departments","loading","getEmployeeById","next","employee","error","errorMessage","save","submitted","clear","createEmployee","updateEmployee","success","keepAfterRouteChange","navigate","relativeTo","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\employees\\add-edit.component.ts","E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\employees\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '@app/_services/account.service';\r\nimport { AlertService } from '@app/_services/alert.service';\r\n\r\n@Component({\r\n    templateUrl: 'add-edit.component.html'\r\n})\r\nexport class AddEditEmployeeComponent implements OnInit {\r\n    employee: any = {\r\n        employeeId: '',\r\n        userId: null,\r\n        position: '',\r\n        departmentId: null,\r\n        hireDate: null,\r\n        status: 'Active'\r\n    };\r\n    users: any[] = [];\r\n    departments: any[] = [];\r\n    id: string;\r\n    isAddMode: boolean;\r\n    errorMessage: string = '';\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        // Load users and departments\r\n        this.loadUsers();\r\n        this.loadDepartments();\r\n\r\n        if (!this.isAddMode) {\r\n            this.loadEmployee();\r\n        }\r\n    }\r\n\r\n    loadUsers() {\r\n        this.accountService.getAllUsers()\r\n            .pipe(first())\r\n            .subscribe(users => this.users = users);\r\n    }\r\n\r\n    loadDepartments() {\r\n        this.accountService.getAllDepartments()\r\n            .pipe(first())\r\n            .subscribe(departments => this.departments = departments);\r\n    }\r\n\r\n    loadEmployee() {\r\n        this.loading = true;\r\n        this.accountService.getEmployeeById(this.id)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: (employee) => {\r\n                    this.employee = employee;\r\n                    this.loading = false;\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    save() {\r\n        this.submitted = true;\r\n        this.alertService.clear();\r\n\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createEmployee();\r\n        } else {\r\n            this.updateEmployee();\r\n        }\r\n    }\r\n\r\n    private createEmployee() {\r\n        this.accountService.createEmployee(this.employee)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateEmployee() {\r\n        this.accountService.updateEmployee(this.id, this.employee)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee updated successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['/employees']);\r\n    }\r\n}","<div class=\"card\">\r\n    <div class=\"card-header\">{{id ? 'Edit' : 'Add'}} Employee</div>\r\n    <!--<div class=\"card-header\">{{(id ? 'Edit' : 'Add')}} Employee</div>-->\r\n    <div class=\"card-body\">\r\n        <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\r\n        \r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Employee ID</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"employee.employeeId\" [disabled]=\"!!id\">\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">User</label>\r\n            <select class=\"form-select\" [(ngModel)]=\"employee.userId\">\r\n                <option *ngFor=\"let user of users\" [value]=\"user.id\">{{user.email}}</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Position</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"employee.position\">\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Department</label>\r\n            <select class=\"form-select\" [(ngModel)]=\"employee.departmentId\">\r\n                <option *ngFor=\"let dept of departments\" [value]=\"dept.id\">{{dept.name}}</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Hire Date</label>\r\n            <input type=\"date\" class=\"form-control\" [(ngModel)]=\"employee.hireDate\">\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Status</label>\r\n            <select class=\"form-select\" [(ngModel)]=\"employee.status\">\r\n                <option>Active</option>\r\n                <option>Inactive</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div class=\"text-center\">\r\n            <button class=\"btn btn-primary me-2\" (click)=\"save()\">Save</button>\r\n            <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}