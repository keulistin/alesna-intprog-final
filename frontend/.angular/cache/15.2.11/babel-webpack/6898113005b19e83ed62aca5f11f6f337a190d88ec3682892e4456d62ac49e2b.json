{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\nlet AddEditEmployeeComponent = class AddEditEmployeeComponent {\n  constructor(route, router, accountService, alertService) {\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.employee = {\n      employeeId: '',\n      userId: null,\n      position: '',\n      departmentId: null,\n      hireDate: null,\n      status: 'Active'\n    };\n    this.users = [];\n    this.departments = [];\n    this.errorMessage = '';\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.isAddMode = !this.id;\n    // Load users and departments\n    this.loadUsers();\n    this.loadDepartments();\n    if (!this.isAddMode) {\n      this.loadEmployee();\n    }\n  }\n  loadUsers() {\n    this.accountService.getAllUsers().pipe(first()).subscribe(users => this.users = users);\n  }\n  loadDepartments() {\n    this.accountService.getAllDepartments().pipe(first()).subscribe(departments => this.departments = departments);\n  }\n  loadEmployee() {\n    this.loading = true;\n    this.accountService.getEmployeeById(this.id).pipe(first()).subscribe({\n      next: employee => {\n        this.employee = employee;\n        this.loading = false;\n      },\n      error: error => {\n        this.errorMessage = error;\n        this.loading = false;\n      }\n    });\n  }\n  save() {\n    this.submitted = true;\n    this.alertService.clear();\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.isAddMode) {\n      this.createEmployee();\n    } else {\n      this.updateEmployee();\n    }\n  }\n  createEmployee() {\n    this.accountService.createEmployee(this.employee).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Employee created successfully', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['../'], {\n          relativeTo: this.route\n        });\n      },\n      error: error => {\n        this.errorMessage = error;\n        this.loading = false;\n      }\n    });\n  }\n  updateEmployee() {\n    this.accountService.updateEmployee(this.id, this.employee).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Employee updated successfully', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['../../'], {\n          relativeTo: this.route\n        });\n      },\n      error: error => {\n        this.errorMessage = error;\n        this.loading = false;\n      }\n    });\n  }\n  cancel() {\n    this.router.navigate(['/employees']);\n  }\n};\nAddEditEmployeeComponent = __decorate([Component({\n  templateUrl: 'add-edit.component.html'\n})], AddEditEmployeeComponent);\nexport { AddEditEmployeeComponent };","map":{"version":3,"mappings":"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","names":["Component","first","AddEditEmployeeComponent","constructor","route","router","accountService","alertService","employeeId","userId","position","departmentId","hireDate","status","ngOnInit","id","snapshot","params","isAddMode","loadUsers","loadDepartments","loadEmployee","getAllUsers","pipe","subscribe","users","getAllDepartments","departments","loading","getEmployeeById","next","employee","error","errorMessage","save","submitted","clear","createEmployee","updateEmployee","success","keepAfterRouteChange","navigate","relativeTo","cancel","templateUrl"],"sourceRoot":"","sources":["E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\employees\\add-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '@app/_services/account.service';\r\nimport { AlertService } from '@app/_services/alert.service';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit.component.html'\r\n})\r\nexport class AddEditEmployeeComponent implements OnInit {\r\n    employee: any = {\r\n        employeeId: '',\r\n        userId: null,\r\n        position: '',\r\n        departmentId: null,\r\n        hireDate: null,\r\n        status: 'Active'\r\n    };\r\n    users: any[] = [];\r\n    departments: any[] = [];\r\n    id: string;\r\n    isAddMode: boolean;\r\n    errorMessage: string = '';\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        // Load users and departments\r\n        this.loadUsers();\r\n        this.loadDepartments();\r\n\r\n        if (!this.isAddMode) {\r\n            this.loadEmployee();\r\n        }\r\n    }\r\n\r\n    loadUsers() {\r\n        this.accountService.getAllUsers()\r\n            .pipe(first())\r\n            .subscribe(users => this.users = users);\r\n    }\r\n\r\n    loadDepartments() {\r\n        this.accountService.getAllDepartments()\r\n            .pipe(first())\r\n            .subscribe(departments => this.departments = departments);\r\n    }\r\n\r\n    loadEmployee() {\r\n        this.loading = true;\r\n        this.accountService.getEmployeeById(this.id)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: (employee) => {\r\n                    this.employee = employee;\r\n                    this.loading = false;\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    save() {\r\n        this.submitted = true;\r\n        this.alertService.clear();\r\n\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createEmployee();\r\n        } else {\r\n            this.updateEmployee();\r\n        }\r\n    }\r\n\r\n    private createEmployee() {\r\n        this.accountService.createEmployee(this.employee)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateEmployee() {\r\n        this.accountService.updateEmployee(this.id, this.employee)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee updated successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['/employees']);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}