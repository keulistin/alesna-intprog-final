{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./transfer-modal.component\";\nconst _c0 = [\"transferModal\"];\nfunction ListComponent_tr_23_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", employee_r3.User.email, \" (\", employee_r3.User.role === \"Admin\" ? \"Admin User\" : \"Normal User\", \") \");\n  }\n}\nfunction ListComponent_tr_23_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Account\");\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-success\": a0,\n    \"bg-danger\": a1\n  };\n};\nfunction ListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ListComponent_tr_23_span_4_Template, 2, 2, \"span\", 9);\n    i0.ɵɵtemplate(5, ListComponent_tr_23_ng_template_5_Template, 1, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\")(15, \"span\", 11);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const employee_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.viewRequests(employee_r3.id));\n    });\n    i0.ɵɵtext(19, \"Requests\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const employee_r3 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.viewWorkflows(employee_r3.id));\n    });\n    i0.ɵɵtext(21, \"Workflows\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const employee_r3 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.openTransferModal(employee_r3.id));\n    });\n    i0.ɵɵtext(23, \"Transfer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const employee_r3 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.edit(employee_r3.id));\n    });\n    i0.ɵɵtext(25, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r3 = ctx.$implicit;\n    const _r5 = i0.ɵɵreference(6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r3.employeeId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", employee_r3.User)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(employee_r3.position);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((employee_r3.Department == null ? null : employee_r3.Department.name) || \"Unknown\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 8, employee_r3.hireDate, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c1, employee_r3.status === \"Active\", employee_r3.status !== \"Active\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employee_r3.status, \" \");\n  }\n}\nfunction ListComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ListComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.add());\n    });\n    i0.ɵɵtext(1, \"Add Employee\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(router, accountService, employeeService) {\n      var _a;\n      this.router = router;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.employees = [];\n      this.account = this.accountService.accountValue;\n      this.currentAccount = null;\n      this.Role = Role;\n      this.isAdmin = false;\n      this.account = this.accountService.accountValue;\n      this.isAdmin = ((_a = this.currentAccount) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n    }\n    ngOnInit() {\n      this.loadAllEmployees();\n    }\n    loadAllEmployees() {\n      this.employeeService.getAll() // Changed to use EmployeeService.getAll()\n      .pipe(first()).subscribe(employees => this.employees = employees);\n    }\n    viewRequests(id) {\n      this.router.navigate(['/admin/requests'], {\n        queryParams: {\n          employeeId: id\n        }\n      });\n    }\n    viewWorkflows(id) {\n      console.log(\"viewWorkflows called with id:\", id);\n      this.router.navigate(['/admin/workflows'], {\n        queryParams: {\n          employeeId: id\n        }\n      });\n    }\n    openTransferModal(employeeId) {\n      this.transferModal.open(employeeId);\n    }\n    edit(employeeId) {\n      this.router.navigate(['/admin/employees/edit', employeeId]); // Assumed admin path\n    }\n\n    delete(employeeId) {\n      const employeeToDelete = this.employees.find(x => x.id === employeeId); // Or x.employeeId depending on what 'id' refers to\n      if (!employeeToDelete) return;\n      if (confirm(`Are you sure you want to delete employee ${employeeToDelete.firstName || ''} ${employeeToDelete.lastName || ''}?`)) {\n        employeeToDelete.isDeleting = true; // If you have this property for UI\n        this.employeeService.delete(employeeId) // Use EmployeeService\n        .pipe(first()).subscribe({\n          next: () => {\n            this.employees = this.employees.filter(x => x.id !== employeeId);\n            // this.alertService.success('Employee deleted'); // Add AlertService if needed\n          },\n\n          error: err => {\n            employeeToDelete.isDeleting = false;\n            // this.alertService.error(err);\n          }\n        });\n      }\n    }\n\n    add() {\n      this.router.navigate(['/admin/employees/add']); // Assumed admin path\n    }\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.EmployeeService));\n  };\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"ng-component\"]],\n    viewQuery: function ListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.transferModal = _t.first);\n      }\n    },\n    decls: 27,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"btn btn-primary float-end\", 3, \"click\", 4, \"ngIf\"], [3, \"transferComplete\"], [\"transferModal\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"noUser\", \"\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn\", \"btn-sm\", \"btn-info\", \"me-1\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", \"me-1\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-1\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Employees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"table\", 4)(6, \"thead\")(7, \"tr\")(8, \"th\");\n        i0.ɵɵtext(9, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, ListComponent_tr_23_Template, 26, 14, \"tr\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(24, ListComponent_button_24_Template, 2, 0, \"button\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"app-transfer-modal\", 7, 8);\n        i0.ɵɵlistener(\"transferComplete\", function ListComponent_Template_app_transfer_modal_transferComplete_25_listener() {\n          return ctx.loadAllEmployees();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.account == null ? null : ctx.account.role) === ctx.Role.Admin);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.TransferModalComponent, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}