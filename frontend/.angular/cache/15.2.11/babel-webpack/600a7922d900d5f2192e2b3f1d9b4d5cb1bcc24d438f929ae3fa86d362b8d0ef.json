{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@app/_services/modal.service\";\nfunction TransferModalComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", dept_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r1.name);\n  }\n}\nexport let TransferModalComponent = /*#__PURE__*/(() => {\n  class TransferModalComponent {\n    constructor(route, router, employeeService, departmentService, modalService) {\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.modalService = modalService;\n      this.departments = [];\n      this.loading = false;\n      this.submitted = false;\n      this.error = '';\n    }\n    ngOnInit() {\n      this.loading = true;\n      const id = this.route.snapshot.params['id'];\n      // Load employee details\n      this.employeeService.getById(id).pipe(first()).subscribe({\n        next: employee => {\n          this.employee = employee;\n          this.departmentId = Number(employee.departmentId);\n          this.loading = false;\n        },\n        error: error => {\n          this.error = error;\n          this.loading = false;\n        }\n      });\n      // Load departments\n      this.departmentService.getAll().pipe(first()).subscribe(departments => this.departments = departments);\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.loading = true;\n      this.employeeService.transfer(this.employee.id.toString(), this.departmentId).pipe(first()).subscribe({\n        next: () => {\n          this.modalService.confirm();\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.error = error;\n          this.loading = false;\n        }\n      });\n    }\n    cancel() {\n      this.modalService.cancel();\n    }\n  }\n  TransferModalComponent.ɵfac = function TransferModalComponent_Factory(t) {\n    return new (t || TransferModalComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i2.DepartmentService), i0.ɵɵdirectiveInject(i3.ModalService));\n  };\n  TransferModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferModalComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"modal-backdrop\", \"fade\", \"show\"], [3, \"ngValue\"]],\n    template: function TransferModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TransferModalComponent_Template_button_click_5_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function TransferModalComponent_Template_select_ngModelChange_10_listener($event) {\n          return ctx.departmentId = $event;\n        });\n        i0.ɵɵtemplate(11, TransferModalComponent_option_11_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function TransferModalComponent_Template_button_click_13_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(14, \"Transfer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function TransferModalComponent_Template_button_click_15_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(16, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(17, \"div\", 13);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Transfer Employee: \", ctx.employee == null ? null : ctx.employee.employeeId, \"\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.departmentId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n      }\n    },\n    encapsulation: 2\n  });\n  return TransferModalComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","i0","TransferModalComponent","constructor","route","router","employeeService","departmentService","modalService","ngOnInit","loading","id","snapshot","params","getById","pipe","subscribe","next","employee","departmentId","Number","error","getAll","departments","onSubmit","submitted","transfer","toString","confirm","navigate","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\employees\\transfer.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\employees\\transfer-modal.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { EmployeeService, DepartmentService } from '@app/_services';\nimport { ModalService } from '@app/_services/modal.service';\nimport { Employee } from '@app/_models/employee';\nimport { Department } from '@app/_models/department';\n\n@Component({ templateUrl: 'transfer-modal.component.html' })\nexport class TransferModalComponent implements OnInit {\n    employee: Employee;\n    departments: Department[] = [];\n    departmentId: number;\n    loading = false;\n    submitted = false;\n    error = '';\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private employeeService: EmployeeService,\n        private departmentService: DepartmentService,\n        private modalService: ModalService\n    ) { }\n\n    ngOnInit() {\n        this.loading = true;\n        const id = this.route.snapshot.params['id'];\n\n        // Load employee details\n        this.employeeService.getById(id)\n            .pipe(first())\n            .subscribe({\n                next: (employee) => {\n                    this.employee = employee;\n                    this.departmentId = Number(employee.departmentId);\n                    this.loading = false;\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n\n        // Load departments\n        this.departmentService.getAll()\n            .pipe(first())\n            .subscribe(departments => this.departments = departments);\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        this.loading = true;\n\n        this.employeeService.transfer(this.employee.id.toString(), this.departmentId)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.modalService.confirm();\n                    this.router.navigate(['/employees']);\n                },\n                error: error => {\n                    this.error = error;\n                    this.loading = false;\n                }\n            });\n    }\n\n    cancel() {\n        this.modalService.cancel();\n    }\n}","<div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Transfer Employee: {{employee?.employeeId}}</h5>\r\n            <button type=\"button\" class=\"btn-close\" (click)=\"cancel()\"></button>\r\n        </div>\r\n\r\n        <div class=\"modal-body\">\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Department</label>\r\n                <select class=\"form-select\" [(ngModel)]=\"departmentId\">\r\n                    <option *ngFor=\"let dept of departments\" [ngValue]=\"dept.id\">{{dept.name}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n            <button class=\"btn btn-warning\" (click)=\"onSubmit()\">Transfer</button>\r\n            <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-backdrop fade show\"></div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}