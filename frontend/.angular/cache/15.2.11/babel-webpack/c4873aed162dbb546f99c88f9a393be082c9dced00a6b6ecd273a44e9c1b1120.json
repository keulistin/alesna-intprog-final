{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction ViewWorkflowComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ViewWorkflowComponent_div_3_h5_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r3.displayEmployeeId, \" - \", ctx_r3.capitalizeFirstLetter(ctx_r3.employee.account.firstName), \" \", ctx_r3.capitalizeFirstLetter(ctx_r3.employee.account.lastName), \" \");\n  }\n}\nfunction ViewWorkflowComponent_div_3_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" No employee details available \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ViewWorkflowComponent_div_3_button_36_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 22);\n  }\n}\nfunction ViewWorkflowComponent_div_3_button_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ViewWorkflowComponent_div_3_button_36_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.deleteWorkflow());\n    });\n    i0.ɵɵtemplate(1, ViewWorkflowComponent_div_3_button_36_span_1_Template, 1, 0, \"span\", 21);\n    i0.ɵɵtext(2, \" Delete Workflow \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.loading);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"bg-info\": a0,\n    \"bg-success\": a1\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    employeeId: a0\n  };\n};\nfunction ViewWorkflowComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"div\", 7)(3, \"div\", 8)(4, \"div\", 9)(5, \"label\", 10);\n    i0.ɵɵtext(6, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h5\", 11);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"label\", 10);\n    i0.ɵɵtext(11, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"span\", 12);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(15, \"div\", 8)(16, \"div\", 9)(17, \"label\", 10);\n    i0.ɵɵtext(18, \"Employee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, ViewWorkflowComponent_div_3_h5_19_Template, 2, 3, \"h5\", 13);\n    i0.ɵɵtemplate(20, ViewWorkflowComponent_div_3_div_20_Template, 2, 0, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 9)(22, \"label\", 10);\n    i0.ɵɵtext(23, \"Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\");\n    i0.ɵɵtext(25);\n    i0.ɵɵpipe(26, \"date\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(27, \"div\", 15)(28, \"h5\", 9);\n    i0.ɵɵtext(29, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\")(31, \"p\", 11);\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"div\", 16)(34, \"a\", 17);\n    i0.ɵɵtext(35, \"Back to List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(36, ViewWorkflowComponent_div_3_button_36_Template, 3, 2, \"button\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(ctx_r1.workflow.type);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c0, ctx_r1.workflow.status === \"ForReviewing\", ctx_r1.workflow.status === \"Completed\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.workflow.status);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.employee && ctx_r1.employee.account);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r1.employee == null ? null : ctx_r1.employee.account));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(26, 9, ctx_r1.workflow.datetimecreated, \"medium\" || \"N/A\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r1.workflow.details);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"queryParams\", i0.ɵɵpureFunction1(15, _c1, ctx_r1.employeeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isOwner);\n  }\n}\nfunction ViewWorkflowComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Workflow not found.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ViewWorkflowComponent = /*#__PURE__*/(() => {\n  class ViewWorkflowComponent {\n    constructor(route, router, workflowService, employeeService, alertService, accountService) {\n      var _a;\n      this.route = route;\n      this.router = router;\n      this.workflowService = workflowService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.loading = false;\n      this.isAdmin = false;\n      this.employee = null;\n      this.employeeId = null;\n      this.displayEmployeeId = null;\n      this.isAdmin = ((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n    }\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'];\n      });\n      const id = this.route.snapshot.params['id'];\n      this.loadWorkflow(id);\n    }\n    loadWorkflow(id) {\n      this.loading = true;\n      this.workflowService.getById(id).pipe(first()).subscribe({\n        next: workflow => {\n          this.workflow = workflow;\n          if (workflow.employee && workflow.employee.account) {\n            this.employee = workflow.employee;\n            this.displayEmployeeId = `EMP${workflow.employee.employeeId}`;\n          }\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n          this.router.navigate(['../'], {\n            relativeTo: this.route,\n            queryParams: {\n              employeeId: this.employeeId\n            },\n            queryParamsHandling: 'merge'\n          });\n        }\n      });\n    }\n    capitalizeFirstLetter(text) {\n      if (!text) return '';\n      return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n    }\n    deleteWorkflow() {\n      if (confirm('Are you sure you want to delete this workflow?')) {\n        this.loading = true;\n        this.workflowService.delete(this.workflow.id).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Workflow deleted successfully');\n            this.router.navigate(['../'], {\n              relativeTo: this.route,\n              queryParams: {\n                employeeId: this.employeeId\n              },\n              queryParamsHandling: 'merge'\n            });\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      }\n    }\n  }\n  ViewWorkflowComponent.ɵfac = function ViewWorkflowComponent_Factory(t) {\n    return new (t || ViewWorkflowComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.WorkflowService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i2.AccountService));\n  };\n  ViewWorkflowComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewWorkflowComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"card\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"], [1, \"card\"], [1, \"card-body\"], [1, \"row\", \"mb-4\"], [1, \"col-md-6\"], [1, \"mb-3\"], [1, \"text-muted\", \"mb-1\"], [1, \"mb-0\"], [1, \"badge\", 3, \"ngClass\"], [\"class\", \"mb-0\", 4, \"ngIf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [1, \"bg-light\", \"p-4\", \"rounded\", \"mb-4\"], [1, \"border-top\", \"pt-3\"], [\"routerLink\", \"/workflows\", \"queryParamsHandling\", \"merge\", 1, \"btn\", \"btn-link\", 3, \"queryParams\"], [\"class\", \"btn btn-danger me-2\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"text-muted\"], [1, \"btn\", \"btn-danger\", \"me-2\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"alert\", \"alert-danger\"]],\n    template: function ViewWorkflowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"View Workflow\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ViewWorkflowComponent_div_2_Template, 2, 0, \"div\", 0);\n        i0.ɵɵtemplate(3, ViewWorkflowComponent_div_3_Template, 37, 17, \"div\", 1);\n        i0.ɵɵtemplate(4, ViewWorkflowComponent_div_4_Template, 2, 0, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.workflow);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.workflow);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i1.RouterLink, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ViewWorkflowComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","Role","i0","ViewWorkflowComponent","constructor","route","router","workflowService","employeeService","alertService","accountService","isAdmin","accountValue","role","Admin","ngOnInit","queryParams","subscribe","params","employeeId","id","snapshot","loadWorkflow","loading","getById","pipe","next","workflow","employee","account","displayEmployeeId","error","navigate","relativeTo","queryParamsHandling","capitalizeFirstLetter","text","charAt","toUpperCase","slice","toLowerCase","deleteWorkflow","confirm","delete","success","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\workflows\\view.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\workflows\\view.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { WorkflowService, AlertService, AccountService, EmployeeService } from '@app/_services';\r\nimport { Role } from '@app/_models';\r\nimport { Workflow } from '@app/_models/workflow';\r\n\r\n@Component({ templateUrl: 'view.component.html' })\r\nexport class ViewWorkflowComponent implements OnInit {\r\n    workflow: Workflow;\r\n    loading = false;\r\n    isAdmin = false;\r\n    employee: any = null;\r\n    employeeId: string | null = null;\r\n    displayEmployeeId: string | null = null;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private workflowService: WorkflowService,\r\n        private employeeService: EmployeeService,\r\n        private alertService: AlertService,\r\n        private accountService: AccountService\r\n    ) {\r\n        this.isAdmin = this.accountService.accountValue?.role === Role.Admin;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.queryParams.subscribe(params => {\r\n            this.employeeId = params['employeeId'];\r\n        });\r\n\r\n        const id = this.route.snapshot.params['id'];\r\n        this.loadWorkflow(id);\r\n    }\r\n\r\n    private loadWorkflow(id: string) {\r\n        this.loading = true;\r\n        this.workflowService.getById(id)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: workflow => {\r\n                    this.workflow = workflow;\r\n                    if (workflow.employee && workflow.employee.account) {\r\n                        this.employee = workflow.employee;\r\n                        this.displayEmployeeId = `EMP${workflow.employee.employeeId}`;\r\n                    }\r\n                    this.loading = false;\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                    this.router.navigate(['../'], {\r\n                        relativeTo: this.route,\r\n                        queryParams: { employeeId: this.employeeId },\r\n                        queryParamsHandling: 'merge'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    capitalizeFirstLetter(text: string): string {\r\n        if (!text) return '';\r\n        return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n    }\r\n\r\n    deleteWorkflow() {\r\n        if (confirm('Are you sure you want to delete this workflow?')) {\r\n            this.loading = true;\r\n            this.workflowService.delete(this.workflow.id)\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: () => {\r\n                        this.alertService.success('Workflow deleted successfully');\r\n                        this.router.navigate(['../'], {\r\n                            relativeTo: this.route,\r\n                            queryParams: { employeeId: this.employeeId },\r\n                            queryParamsHandling: 'merge'\r\n                        });\r\n                    },\r\n                    error: error => {\r\n                        this.alertService.error(error);\r\n                        this.loading = false;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n} ","<h1>View Workflow</h1>\r\n\r\n<div *ngIf=\"loading\" class=\"text-center\">\r\n    <span class=\"spinner-border spinner-border-lg align-center\"></span>\r\n</div>\r\n\r\n<div *ngIf=\"!loading && workflow\" class=\"card\">\r\n    <div class=\"card-body\">\r\n        <div class=\"row mb-4\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"text-muted mb-1\">Type</label>\r\n                    <h5 class=\"mb-0\">{{workflow.type}}</h5>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"text-muted mb-1\">Status</label>\r\n                    <div>\r\n                        <span class=\"badge\" [ngClass]=\"{\r\n                            'bg-info': workflow.status === 'ForReviewing',\r\n                            'bg-success': workflow.status === 'Completed'\r\n                        }\">{{workflow.status}}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"mb-3\">\r\n                    <label class=\"text-muted mb-1\">Employee</label>\r\n                    <h5 class=\"mb-0\" *ngIf=\"employee && employee.account\">\r\n                        {{displayEmployeeId}} - {{capitalizeFirstLetter(employee.account.firstName)}} {{capitalizeFirstLetter(employee.account.lastName)}}\r\n                    </h5>\r\n                    <div *ngIf=\"!employee?.account\" class=\"text-muted\">\r\n                        No employee details available\r\n                    </div>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label class=\"text-muted mb-1\">Created</label>\r\n                    <div>{{workflow.datetimecreated | date:'medium' || 'N/A'}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"bg-light p-4 rounded mb-4\">\r\n            <h5 class=\"mb-3\">Details</h5>\r\n            <div>\r\n                <p class=\"mb-0\">{{workflow.details}}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"border-top pt-3\">\r\n            <a routerLink=\"/workflows\" [queryParams]=\"{ employeeId: employeeId }\" queryParamsHandling=\"merge\" class=\"btn btn-link\">Back to List</a>\r\n            <button *ngIf=\"isOwner\" (click)=\"deleteWorkflow()\" class=\"btn btn-danger me-2\" [disabled]=\"loading\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                Delete Workflow\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!loading && !workflow\" class=\"alert alert-danger\">\r\n    Workflow not found.\r\n</div> "]},"metadata":{},"sourceType":"module","externalDependencies":[]}