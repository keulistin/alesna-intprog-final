{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_16_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction AddEditComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_21_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.firstName.errors.required);\n  }\n}\nfunction AddEditComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_26_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.lastName.errors.required);\n  }\n}\nfunction AddEditComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_31_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_31_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, AddEditComponent_div_31_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.email);\n  }\n}\nfunction AddEditComponent_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_41_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.role.errors.required);\n  }\n}\nfunction AddEditComponent_div_43_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_43_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_43_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_43_div_4_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵtemplate(2, AddEditComponent_div_43_div_4_div_2_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.f.password.errors.minlength);\n  }\n}\nfunction AddEditComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"label\");\n    i0.ɵɵtext(2, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 23);\n    i0.ɵɵtemplate(4, AddEditComponent_div_43_div_4_Template, 3, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.password.touched && ctx_r5.f.password.errors);\n  }\n}\nfunction AddEditComponent_div_44_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_44_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_div_44_div_4_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction AddEditComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"label\");\n    i0.ɵɵtext(2, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 24);\n    i0.ɵɵtemplate(4, AddEditComponent_div_44_div_4_Template, 2, 1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.confirmPassword.touched && ctx_r6.f.confirmPassword.errors);\n  }\n}\nfunction AddEditComponent_span_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        title: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        role: ['', Validators.required],\n        status: ['inactive', Validators.required],\n        password: ['', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\n        confirmPassword: ['']\n      }, {\n        validator: MustMatch('password', 'confirmPassword')\n      });\n      if (!this.isAddMode) {\n        this.accountService.getById(this.id).pipe(first()).subscribe(x => {\n          // When editing, preserve the existing status\n          this.form.patchValue(x);\n          // If you want to keep password fields empty when editing\n          this.form.controls['password'].setValue('');\n          this.form.controls['confirmPassword'].setValue('');\n        });\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      // Prepare form data - remove confirmPassword as it's not needed for the API\n      const formData = Object.assign({}, this.form.value);\n      delete formData.confirmPassword;\n      if (this.isAddMode) {\n        this.createAccount(formData);\n      } else {\n        this.updateAccount(formData);\n      }\n    }\n    createAccount(accountData) {\n      this.accountService.create(accountData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Account created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateAccount(accountData) {\n      this.accountService.update(this.id, accountData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 51,\n    vars: 10,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"formControlName\", \"title\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"value\", \"Dr\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"formControlName\", \"role\", 1, \"form-control\"], [\"value\", \"User\"], [\"value\", \"Admin\"], [\"type\", \"hidden\", \"formControlName\", \"status\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 2);\n        i0.ɵɵelement(5, \"option\", 3);\n        i0.ɵɵelementStart(6, \"option\", 4);\n        i0.ɵɵtext(7, \"Mr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"option\", 5);\n        i0.ɵɵtext(9, \"Mrs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Miss\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 7);\n        i0.ɵɵtext(13, \"Ms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15, \"Dr\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, AddEditComponent_div_16_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 1)(18, \"label\");\n        i0.ɵɵtext(19, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵtemplate(21, AddEditComponent_div_21_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 1)(23, \"label\");\n        i0.ɵɵtext(24, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 11);\n        i0.ɵɵtemplate(26, AddEditComponent_div_26_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\");\n        i0.ɵɵtext(29, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 12);\n        i0.ɵɵtemplate(31, AddEditComponent_div_31_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 1)(33, \"label\");\n        i0.ɵɵtext(34, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"select\", 13);\n        i0.ɵɵelement(36, \"option\", 3);\n        i0.ɵɵelementStart(37, \"option\", 14);\n        i0.ɵɵtext(38, \"User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 15);\n        i0.ɵɵtext(40, \"Admin\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, AddEditComponent_div_41_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 16);\n        i0.ɵɵtemplate(43, AddEditComponent_div_43_Template, 5, 1, \"div\", 17);\n        i0.ɵɵtemplate(44, AddEditComponent_div_44_Template, 5, 1, \"div\", 17);\n        i0.ɵɵelementStart(45, \"div\", 1)(46, \"button\", 18);\n        i0.ɵɵtemplate(47, AddEditComponent_span_47_Template, 1, 0, \"span\", 19);\n        i0.ɵɵtext(48, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"a\", 20);\n        i0.ɵɵtext(50, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.title.touched && ctx.f.title.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.firstName.touched && ctx.f.firstName.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.lastName.touched && ctx.f.lastName.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.email.touched && ctx.f.email.errors);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.role.touched && ctx.f.role.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","AddEditComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","id","snapshot","params","isAddMode","form","group","title","required","firstName","lastName","email","role","status","password","minLength","nullValidator","confirmPassword","validator","getById","pipe","subscribe","x","patchValue","controls","setValue","f","onSubmit","submitted","clear","invalid","loading","formData","value","createAccount","updateAccount","accountData","create","next","success","keepAfterRouteChange","navigate","relativeTo","error","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\vhinc\\Desktop\\semifinal\\groupB-fullstack-app\\frontend\\src\\app\\admin\\accounts\\add-edit.component.ts","C:\\Users\\vhinc\\Desktop\\semifinal\\groupB-fullstack-app\\frontend\\src\\app\\admin\\accounts\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\nimport { MustMatch } from '@app/_helpers';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\nexport class AddEditComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    id: string;\r\n    isAddMode: boolean;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        this.form = this.formBuilder.group({\r\n            title: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            role: ['', Validators.required],\r\n            status: ['inactive', Validators.required], // Set default to inactive and make required\r\n            password: ['', [Validators.minLength(6), this.isAddMode ? Validators.required : Validators.nullValidator]],\r\n            confirmPassword: ['']\r\n        }, {\r\n            validator: MustMatch('password', 'confirmPassword')\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.accountService.getById(this.id)\r\n                .pipe(first())\r\n                .subscribe(x => {\r\n                    // When editing, preserve the existing status\r\n                    this.form.patchValue(x);\r\n                    // If you want to keep password fields empty when editing\r\n                    this.form.controls['password'].setValue('');\r\n                    this.form.controls['confirmPassword'].setValue('');\r\n                });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        this.alertService.clear();\r\n\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        \r\n        // Prepare form data - remove confirmPassword as it's not needed for the API\r\n        const formData = { ...this.form.value };\r\n        delete formData.confirmPassword;\r\n\r\n        if (this.isAddMode) {\r\n            this.createAccount(formData);\r\n        } else {\r\n            this.updateAccount(formData);\r\n        }\r\n    }\r\n\r\n    private createAccount(accountData: any) {\r\n        this.accountService.create(accountData)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Account created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateAccount(accountData: any) {\r\n        this.accountService.update(this.id, accountData)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n}","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label>Title</label>\r\n        <select formControlName=\"title\" class=\"form-control\">\r\n            <option value=\"\"></option>\r\n            <option value=\"Mr\">Mr</option>\r\n            <option value=\"Mrs\">Mrs</option>\r\n            <option value=\"Miss\">Miss</option>\r\n            <option value=\"Ms\">Ms</option>\r\n            <option value=\"Dr\">Dr</option>\r\n        </select>\r\n        <div *ngIf=\"f.title.touched && f.title.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.title.errors.required\">Title is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" />\r\n        <div *ngIf=\"f.firstName.touched && f.firstName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" />\r\n        <div *ngIf=\"f.lastName.touched && f.lastName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>Email</label>\r\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" />\r\n        <div *ngIf=\"f.email.touched && f.email.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>Role</label>\r\n        <select formControlName=\"role\" class=\"form-control\">\r\n            <option value=\"\"></option>\r\n            <option value=\"User\">User</option>\r\n            <option value=\"Admin\">Admin</option>\r\n        </select>\r\n        <div *ngIf=\"f.role.touched && f.role.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.role.errors.required\">Role is required</div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Status field - hidden in the form but included in the form group -->\r\n    <input type=\"hidden\" formControlName=\"status\" />\r\n\r\n    <div class=\"form-group\" *ngIf=\"isAddMode\">\r\n        <label>Password</label>\r\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\r\n        <div *ngIf=\"f.password.touched && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\" *ngIf=\"isAddMode\">\r\n        <label>Confirm Password</label>\r\n        <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" />\r\n        <div *ngIf=\"f.confirmPassword.touched && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Save\r\n        </button>\r\n        <a routerLink=\"../\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}