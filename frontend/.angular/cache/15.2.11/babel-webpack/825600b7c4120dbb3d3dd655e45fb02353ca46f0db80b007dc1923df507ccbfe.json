{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction ListComponent_tr_23_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", employee_r2.User.email, \" (\", employee_r2.User.role === \"Admin\" ? \"Admin User\" : \"Normal User\", \") \");\n  }\n}\nfunction ListComponent_tr_23_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"No Account\");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"bg-approve\": a0,\n    \"bg-rejected\": a1\n  };\n};\nfunction ListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ListComponent_tr_23_span_4_Template, 2, 2, \"span\", 7);\n    i0.ɵɵtemplate(5, ListComponent_tr_23_ng_template_5_Template, 1, 0, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\")(15, \"span\", 9);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const employee_r2 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.viewRequests(employee_r2.id));\n    });\n    i0.ɵɵtext(19, \"Requests\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const employee_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.viewWorkflows(employee_r2.id));\n    });\n    i0.ɵɵtext(21, \"Workflows\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const employee_r2 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.transfer(employee_r2.id));\n    });\n    i0.ɵɵtext(23, \"Transfer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_23_Template_button_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const employee_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.edit(employee_r2.id));\n    });\n    i0.ɵɵtext(25, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r2 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r2.employeeId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", employee_r2.User)(\"ngIfElse\", _r4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(employee_r2.position);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((employee_r2.Department == null ? null : employee_r2.Department.name) || \"Unknown\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 8, employee_r2.hireDate, \"shortDate\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c0, employee_r2.status === \"Active\", employee_r2.status !== \"Active\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employee_r2.status, \" \");\n  }\n}\nfunction ListComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ListComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.add());\n    });\n    i0.ɵɵtext(1, \"Add Employee\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(router, accountService, employeeService) {\n      var _a;\n      this.router = router;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.employees = [];\n      this.account = this.accountService.accountValue;\n      this.currentAccount = null;\n      this.Role = Role;\n      this.isAdmin = false;\n      this.account = this.accountService.accountValue;\n      this.isAdmin = ((_a = this.currentAccount) === null || _a === void 0 ? void 0 : _a.role) === Role.Admin;\n    }\n    ngOnInit() {\n      this.loadAllEmployees();\n    }\n    loadAllEmployees() {\n      this.employeeService.getAll() // Changed to use EmployeeService.getAll()\n      .pipe(first()).subscribe(employees => this.employees = employees);\n    }\n    viewRequests(id) {\n      this.router.navigate(['/admin/requests'], {\n        queryParams: {\n          employeeId: id\n        }\n      });\n    }\n    viewWorkflows(id) {\n      console.log(\"viewWorkflows called with id:\", id);\n      this.router.navigate(['/admin/workflows'], {\n        queryParams: {\n          employeeId: id\n        }\n      });\n    }\n    transfer(employeeId) {\n      this.router.navigate(['/admin/employees/transfer', employeeId]); // Assumed admin path\n    }\n\n    edit(employeeId) {\n      this.router.navigate(['/admin/employees/edit', employeeId]); // Assumed admin path\n    }\n\n    delete(employeeId) {\n      const employeeToDelete = this.employees.find(x => x.id === employeeId); // Or x.employeeId depending on what 'id' refers to\n      if (!employeeToDelete) return;\n      if (confirm(`Are you sure you want to delete employee ${employeeToDelete.firstName || ''} ${employeeToDelete.lastName || ''}?`)) {\n        employeeToDelete.isDeleting = true; // If you have this property for UI\n        this.employeeService.delete(employeeId) // Use EmployeeService\n        .pipe(first()).subscribe({\n          next: () => {\n            this.employees = this.employees.filter(x => x.id !== employeeId);\n            // this.alertService.success('Employee deleted'); // Add AlertService if needed\n          },\n\n          error: err => {\n            employeeToDelete.isDeleting = false;\n            // this.alertService.error(err);\n          }\n        });\n      }\n    }\n\n    add() {\n      this.router.navigate(['/admin/employees/add']); // Assumed admin path\n    }\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.EmployeeService));\n  };\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 25,\n    vars: 2,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"btn btn-primary float-end\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"noUser\", \"\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn\", \"btn-sm\", \"btn-info\", \"me-1\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-warning\", \"me-1\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-1\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Employees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"table\", 4)(6, \"thead\")(7, \"tr\")(8, \"th\");\n        i0.ɵɵtext(9, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, ListComponent_tr_23_Template, 26, 14, \"tr\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(24, ListComponent_button_24_Template, 2, 0, \"button\", 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.account == null ? null : ctx.account.role) === ctx.Role.Admin);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.DatePipe],\n    encapsulation: 2\n  });\n  return ListComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","Role","i0","ListComponent","constructor","router","accountService","employeeService","accountValue","account","isAdmin","currentAccount","role","Admin","ngOnInit","loadAllEmployees","getAll","pipe","subscribe","employees","viewRequests","id","navigate","queryParams","employeeId","viewWorkflows","console","log","transfer","edit","delete","employeeToDelete","find","x","confirm","firstName","lastName","isDeleting","next","filter","error","err","add","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\employees\\list.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\employees\\list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService, EmployeeService } from '@app/_services';\r\nimport { first } from 'rxjs/operators';\r\nimport { Account, Role } from '@app/_models';\r\n\r\n@Component({\r\n  templateUrl: 'list.component.html' // assuming the template is in list.component.html\r\n})\r\nexport class ListComponent implements OnInit {\r\n  employees: any[] = [];\r\n  account = this.accountService.accountValue;\r\n  currentAccount: Account | null = null;\r\n  Role = Role;\r\n  isAdmin = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private accountService: AccountService,\r\n    private employeeService: EmployeeService\r\n  ) {\r\n    this.account = this.accountService.accountValue;\r\n    this.isAdmin = this.currentAccount?.role === Role.Admin;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadAllEmployees();\r\n  }\r\n\r\n  private loadAllEmployees() {\r\n    this.employeeService.getAll() // Changed to use EmployeeService.getAll()\r\n      .pipe(first())\r\n      .subscribe(employees => this.employees = employees);\r\n  }\r\n\r\n  viewRequests(id: string) {\r\n    this.router.navigate(['/admin/requests'], { queryParams: { employeeId: id } });\r\n  }\r\n\r\n  viewWorkflows(id: string) {\r\n    console.log(\"viewWorkflows called with id:\", id);\r\n    this.router.navigate(['/admin/workflows'], { queryParams: { employeeId: id } });\r\n  }\r\n\r\n  transfer(employeeId: string) { // Renamed parameter for clarity\r\n    this.router.navigate(['/admin/employees/transfer', employeeId]); // Assumed admin path\r\n  }\r\n\r\n  edit(employeeId: string) { // Renamed parameter\r\n    this.router.navigate(['/admin/employees/edit', employeeId]); // Assumed admin path\r\n  }\r\n\r\n  delete(employeeId: string) { // Renamed parameter\r\n    const employeeToDelete = this.employees.find(x => x.id === employeeId); // Or x.employeeId depending on what 'id' refers to\r\n    if (!employeeToDelete) return;\r\n\r\n    if (confirm(`Are you sure you want to delete employee ${employeeToDelete.firstName || ''} ${employeeToDelete.lastName || ''}?`)) {\r\n      employeeToDelete.isDeleting = true; // If you have this property for UI\r\n      this.employeeService.delete(employeeId) // Use EmployeeService\r\n        .pipe(first())\r\n        .subscribe({\r\n          next: () => {\r\n            this.employees = this.employees.filter(x => x.id !== employeeId);\r\n            // this.alertService.success('Employee deleted'); // Add AlertService if needed\r\n          },\r\n          error: err => {\r\n            employeeToDelete.isDeleting = false;\r\n            // this.alertService.error(err);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  add() {\r\n    this.router.navigate(['/admin/employees/add']); // Assumed admin path\r\n  }\r\n}","<div class=\"card\">\r\n    <div class=\"card-header\">Employees</div>\r\n    <div class=\"card-body\">\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Employee ID</th>\r\n                        <th>Account</th>\r\n                        <th>Position</th>\r\n                        <th>Department</th>\r\n                        <th>Hire Date</th>\r\n                        <th>Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let employee of employees\">\r\n                        <td>{{employee.employeeId}}</td>\r\n                        <td>\r\n                            <span *ngIf=\"employee.User; else noUser\">\r\n                                {{employee.User.email}} ({{employee.User.role === 'Admin' ? 'Admin User' : 'Normal User'}})\r\n                            </span>\r\n                            <ng-template #noUser>No Account</ng-template>\r\n                        </td>\r\n                        <td>{{employee.position}}</td>\r\n                        <td>{{employee.Department?.name || 'Unknown'}}</td>\r\n                        <td>{{employee.hireDate | date:'shortDate'}}</td>\r\n                        <td>\r\n                            <span class=\"badge\"\r\n                                [ngClass]=\"{'bg-approve': employee.status === 'Active', 'bg-rejected': employee.status !== 'Active'}\">\r\n                                {{employee.status}}\r\n                            </span>\r\n                        </td>\r\n                        <td>\r\n                            <button class=\"btn btn-sm btn-info me-1 mr-2\"\r\n                                (click)=\"viewRequests(employee.id)\">Requests</button>\r\n                            <button class=\"btn btn-sm btn-info me-1 mr-2\"\r\n                                (click)=\"viewWorkflows(employee.id)\">Workflows</button>\r\n                            <button class=\"btn btn-sm btn-warning me-1 mr-2\"\r\n                                (click)=\"transfer(employee.id)\">Transfer</button>\r\n                            <button class=\"btn btn-sm btn-primary me-1 mr-2\" (click)=\"edit(employee.id)\">Edit</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <button *ngIf=\"account?.role === Role.Admin\" class=\"btn btn-primary float-end\" (click)=\"add()\">Add\r\n            Employee</button>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}