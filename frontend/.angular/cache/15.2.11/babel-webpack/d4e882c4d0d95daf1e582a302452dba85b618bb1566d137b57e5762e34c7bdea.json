{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ModalContainerComponent = class ModalContainerComponent {\n  constructor(modalService) {\n    this.modalService = modalService;\n    this.showModal = false;\n    this.title = 'Modal';\n    this.content = null;\n    this.showFooter = true;\n    this.showConfirm = true;\n    this.confirmText = 'Confirm';\n    this.currentId = null;\n    this.closeOnBackdrop = true;\n    this.onConfirm = () => {};\n  }\n  ngOnInit() {\n    this.subscription = this.modalService.modal$.subscribe(modal => {\n      if (modal.action === 'open') {\n        this.showModal = true;\n        this.currentId = modal.id;\n        if (modal.data) {\n          this.title = modal.data.title || this.title;\n          this.content = modal.data.content || this.content;\n          this.showFooter = modal.data.showFooter !== undefined ? modal.data.showFooter : this.showFooter;\n          this.showConfirm = modal.data.showConfirm !== undefined ? modal.data.showConfirm : this.showConfirm;\n          this.confirmText = modal.data.confirmText || this.confirmText;\n          this.closeOnBackdrop = modal.data.closeOnBackdrop !== undefined ? modal.data.closeOnBackdrop : this.closeOnBackdrop;\n          this.onConfirm = modal.data.onConfirm || this.onConfirm;\n        }\n        document.body.classList.add('modal-open');\n      } else if (modal.action === 'close' && modal.id === this.currentId) {\n        this.showModal = false;\n        this.currentId = null;\n        document.body.classList.remove('modal-open');\n      }\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  close() {\n    if (this.currentId) {\n      this.modalService.close(this.currentId);\n    }\n  }\n  confirm() {\n    if (this.onConfirm) {\n      this.onConfirm();\n    }\n    this.close();\n  }\n  onBackdropClick() {\n    if (this.closeOnBackdrop) {\n      this.close();\n    }\n  }\n};\nModalContainerComponent = __decorate([Component({\n  selector: 'app-modal-container',\n  template: `\n        <div class=\"modal-backdrop\" *ngIf=\"showModal\" (click)=\"onBackdropClick()\"></div>\n        <div class=\"modal\" tabindex=\"-1\" [ngClass]=\"{ 'show': showModal }\" *ngIf=\"showModal\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">{{title}}</h5>\n                        <button type=\"button\" class=\"btn-close\" (click)=\"close()\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <ng-content></ng-content>\n                        <div *ngIf=\"content\">{{content}}</div>\n                    </div>\n                    <div class=\"modal-footer\" *ngIf=\"showFooter\">\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">Close</button>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"confirm()\" *ngIf=\"showConfirm\">{{confirmText}}</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n  styles: [`\n        .modal-backdrop {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.5);\n            z-index: 1040;\n        }\n        .modal {\n            display: block;\n            z-index: 1050;\n        }\n    `]\n})], ModalContainerComponent);\nexport { ModalContainerComponent };","map":{"version":3,"mappings":"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","names":["Component","ModalContainerComponent","constructor","modalService","ngOnInit","subscription","modal$","subscribe","modal","action","showModal","currentId","id","data","title","content","showFooter","undefined","showConfirm","confirmText","closeOnBackdrop","onConfirm","document","body","classList","add","remove","ngOnDestroy","unsubscribe","close","confirm","onBackdropClick","selector","template","styles"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\_components\\modal-container.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ModalService } from '@app/_services';\n\n@Component({\n    selector: 'app-modal-container',\n    template: `\n        <div class=\"modal-backdrop\" *ngIf=\"showModal\" (click)=\"onBackdropClick()\"></div>\n        <div class=\"modal\" tabindex=\"-1\" [ngClass]=\"{ 'show': showModal }\" *ngIf=\"showModal\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">{{title}}</h5>\n                        <button type=\"button\" class=\"btn-close\" (click)=\"close()\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <ng-content></ng-content>\n                        <div *ngIf=\"content\">{{content}}</div>\n                    </div>\n                    <div class=\"modal-footer\" *ngIf=\"showFooter\">\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"close()\">Close</button>\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"confirm()\" *ngIf=\"showConfirm\">{{confirmText}}</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n        .modal-backdrop {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.5);\n            z-index: 1040;\n        }\n        .modal {\n            display: block;\n            z-index: 1050;\n        }\n    `]\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    showModal = false;\n    title = 'Modal';\n    content: string = null;\n    showFooter = true;\n    showConfirm = true;\n    confirmText = 'Confirm';\n    currentId: string = null;\n    closeOnBackdrop = true;\n    onConfirm: () => void = () => {};\n\n    constructor(private modalService: ModalService) { }\n\n    ngOnInit() {\n        this.subscription = this.modalService.modal$.subscribe(modal => {\n            if (modal.action === 'open') {\n                this.showModal = true;\n                this.currentId = modal.id;\n                \n                if (modal.data) {\n                    this.title = modal.data.title || this.title;\n                    this.content = modal.data.content || this.content;\n                    this.showFooter = modal.data.showFooter !== undefined ? modal.data.showFooter : this.showFooter;\n                    this.showConfirm = modal.data.showConfirm !== undefined ? modal.data.showConfirm : this.showConfirm;\n                    this.confirmText = modal.data.confirmText || this.confirmText;\n                    this.closeOnBackdrop = modal.data.closeOnBackdrop !== undefined ? modal.data.closeOnBackdrop : this.closeOnBackdrop;\n                    this.onConfirm = modal.data.onConfirm || this.onConfirm;\n                }\n                \n                document.body.classList.add('modal-open');\n            } else if (modal.action === 'close' && modal.id === this.currentId) {\n                this.showModal = false;\n                this.currentId = null;\n                document.body.classList.remove('modal-open');\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    close() {\n        if (this.currentId) {\n            this.modalService.close(this.currentId);\n        }\n    }\n\n    confirm() {\n        if (this.onConfirm) {\n            this.onConfirm();\n        }\n        this.close();\n    }\n\n    onBackdropClick() {\n        if (this.closeOnBackdrop) {\n            this.close();\n        }\n    }\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}