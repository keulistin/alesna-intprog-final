{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services/account.service\";\nimport * as i3 from \"@app/_services/alert.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AddEditEmployeeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditEmployeeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" No users available. Please create users first. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", user_r4.email || \"Unknown Email\", \" (\", user_r4.role === \"Admin\" ? \"Admin User\" : \"Normal User\", \") \");\n  }\n}\nfunction AddEditEmployeeComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r5.name);\n  }\n}\nexport let AddEditEmployeeComponent = /*#__PURE__*/(() => {\n  class AddEditEmployeeComponent {\n    constructor(route, router, accountService, alertService) {\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.employee = {\n        employeeId: '',\n        userId: null,\n        position: '',\n        departmentId: null,\n        hireDate: null,\n        status: 'Active'\n      };\n      this.users = [];\n      this.departments = [];\n      this.errorMessage = '';\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Load users and departments\n      this.loadUsers();\n      this.loadDepartments();\n      if (this.isAddMode) {\n        // Fetch and pre-fill the next employeeId\n        this.accountService.getNextEmployeeId().pipe(first()).subscribe({\n          next: res => {\n            this.employee.employeeId = res.employeeId;\n          },\n          error: error => {\n            this.errorMessage = 'Failed to fetch next Employee ID';\n          }\n        });\n      } else {\n        this.loadEmployee();\n      }\n    }\n    loadUsers() {\n      this.accountService.getAllUsers().pipe(first()).subscribe({\n        next: users => {\n          console.log('Loaded users:', users);\n          if (Array.isArray(users)) {\n            this.users = users;\n          } else {\n            console.error('Expected users to be an array but got:', typeof users);\n            this.errorMessage = 'Error loading users data';\n            this.users = [];\n          }\n        },\n        error: error => {\n          console.error('Error loading users:', error);\n          this.errorMessage = 'Error loading users data';\n        }\n      });\n    }\n    loadDepartments() {\n      this.accountService.getAllDepartments().pipe(first()).subscribe(departments => this.departments = departments);\n    }\n    loadEmployee() {\n      this.loading = true;\n      this.accountService.getEmployeeById(this.id).pipe(first()).subscribe({\n        next: employee => {\n          this.employee = employee;\n          this.loading = false;\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    save() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.loading) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      this.accountService.createEmployee(this.employee).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      this.accountService.updateEmployee(this.id, this.employee).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    cancel() {\n      if (this.isAddMode) {\n        this.router.navigate(['../'], {\n          relativeTo: this.route\n        });\n      } else {\n        this.router.navigate(['../../'], {\n          relativeTo: this.route\n        });\n      }\n    }\n  }\n  AddEditEmployeeComponent.ɵfac = function AddEditEmployeeComponent_Factory(t) {\n    return new (t || AddEditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditEmployeeComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 43,\n    vars: 13,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"readonly\", \"ngModelChange\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [1, \"form-select\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-warning\"], [3, \"value\"]],\n    template: function AddEditEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditEmployeeComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.employee.employeeId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, AddEditEmployeeComponent_div_12_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementStart(13, \"select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_select_ngModelChange_13_listener($event) {\n          return ctx.employee.userId = $event;\n        });\n        i0.ɵɵelementStart(14, \"option\", 9);\n        i0.ɵɵtext(15, \"-- Select User --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, AddEditEmployeeComponent_option_16_Template, 2, 3, \"option\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\", 5);\n        i0.ɵɵtext(19, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.employee.position = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"label\", 5);\n        i0.ɵɵtext(23, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_select_ngModelChange_24_listener($event) {\n          return ctx.employee.departmentId = $event;\n        });\n        i0.ɵɵtemplate(25, AddEditEmployeeComponent_option_25_Template, 2, 2, \"option\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 5);\n        i0.ɵɵtext(28, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.employee.hireDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 4)(31, \"label\", 5);\n        i0.ɵɵtext(32, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditEmployeeComponent_Template_select_ngModelChange_33_listener($event) {\n          return ctx.employee.status = $event;\n        });\n        i0.ɵɵelementStart(34, \"option\");\n        i0.ɵɵtext(35, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\");\n        i0.ɵɵtext(37, \"Inactive\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 14)(39, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_button_click_39_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(40, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_button_click_41_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(42, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Employee\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.employeeId)(\"readonly\", !ctx.isAddMode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.users.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.userId)(\"disabled\", ctx.users.length === 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.position);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.departmentId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.hireDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.status);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n    encapsulation: 2\n  });\n  return AddEditEmployeeComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","i0","AddEditEmployeeComponent","constructor","route","router","accountService","alertService","employeeId","userId","position","departmentId","hireDate","status","ngOnInit","id","snapshot","params","isAddMode","loadUsers","loadDepartments","getNextEmployeeId","pipe","subscribe","next","res","employee","error","errorMessage","loadEmployee","getAllUsers","users","console","log","Array","isArray","getAllDepartments","departments","loading","getEmployeeById","save","submitted","clear","createEmployee","updateEmployee","success","keepAfterRouteChange","navigate","relativeTo","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\employees\\add-edit.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\employees\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountService } from '@app/_services/account.service';\r\nimport { AlertService } from '@app/_services/alert.service';\r\n\r\n@Component({\r\n    templateUrl: 'add-edit.component.html'\r\n})\r\nexport class AddEditEmployeeComponent implements OnInit {\r\n    employee: any = {\r\n        employeeId: '',\r\n        userId: null,\r\n        position: '',\r\n        departmentId: null,\r\n        hireDate: null,\r\n        status: 'Active'\r\n    };\r\n    users: any[] = [];\r\n    departments: any[] = [];\r\n    id: string;\r\n    isAddMode: boolean;\r\n    errorMessage: string = '';\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        // Load users and departments\r\n        this.loadUsers();\r\n        this.loadDepartments();\r\n\r\n        if (this.isAddMode) {\r\n            // Fetch and pre-fill the next employeeId\r\n            this.accountService.getNextEmployeeId()\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        this.employee.employeeId = res.employeeId;\r\n                    },\r\n                    error: (error) => {\r\n                        this.errorMessage = 'Failed to fetch next Employee ID';\r\n                    }\r\n                });\r\n        } else {\r\n            this.loadEmployee();\r\n        }\r\n    }\r\n\r\n    loadUsers() {\r\n        this.accountService.getAllUsers()\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: (users) => {\r\n                    console.log('Loaded users:', users);\r\n                    if (Array.isArray(users)) {\r\n                        this.users = users;\r\n                    } else {\r\n                        console.error('Expected users to be an array but got:', typeof users);\r\n                        this.errorMessage = 'Error loading users data';\r\n                        this.users = [];\r\n                    }\r\n                },\r\n                error: (error) => {\r\n                    console.error('Error loading users:', error);\r\n                    this.errorMessage = 'Error loading users data';\r\n                }\r\n            });\r\n    }\r\n\r\n    loadDepartments() {\r\n        this.accountService.getAllDepartments()\r\n            .pipe(first())\r\n            .subscribe(departments => this.departments = departments);\r\n    }\r\n\r\n    loadEmployee() {\r\n        this.loading = true;\r\n        this.accountService.getEmployeeById(this.id)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: (employee) => {\r\n                    this.employee = employee;\r\n                    this.loading = false;\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    save() {\r\n        this.submitted = true;\r\n        this.alertService.clear();\r\n\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createEmployee();\r\n        } else {\r\n            this.updateEmployee();\r\n        }\r\n    }\r\n\r\n    private createEmployee() {\r\n        this.accountService.createEmployee(this.employee)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateEmployee() {\r\n        this.accountService.updateEmployee(this.id, this.employee)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Employee updated successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    cancel() {\r\n        if (this.isAddMode) {\r\n            this.router.navigate(['../'], { relativeTo: this.route });\r\n        } else {\r\n            this.router.navigate(['../../'], { relativeTo: this.route });\r\n        }\r\n    }\r\n}","<div class=\"card\">\r\n    <div class=\"card-header\">{{id ? 'Edit' : 'Add'}} Employee</div>\r\n    <!--<div class=\"card-header\">{{(id ? 'Edit' : 'Add')}} Employee</div>-->\r\n    <div class=\"card-body\">\r\n        <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Employee ID</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"employee.employeeId\" [readonly]=\"!isAddMode\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">User</label>\r\n            <div *ngIf=\"users.length === 0\" class=\"alert alert-warning\">\r\n                No users available. Please create users first.\r\n            </div>\r\n            <select class=\"form-select\" [(ngModel)]=\"employee.userId\" [disabled]=\"users.length === 0\">\r\n                <option value=\"\">-- Select User --</option>\r\n                <option *ngFor=\"let user of users\" [value]=\"user.id\">\r\n                    {{user.email || 'Unknown Email'}} ({{user.role === 'Admin' ? 'Admin User' : 'Normal User'}})\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Position</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"employee.position\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Department</label>\r\n            <select class=\"form-select\" [(ngModel)]=\"employee.departmentId\">\r\n                <option *ngFor=\"let dept of departments\" [value]=\"dept.id\">{{dept.name}}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Hire Date</label>\r\n            <input type=\"date\" class=\"form-control\" [(ngModel)]=\"employee.hireDate\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label class=\"form-label\">Status</label>\r\n            <select class=\"form-select\" [(ngModel)]=\"employee.status\">\r\n                <option>Active</option>\r\n                <option>Inactive</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"text-center\">\r\n            <button class=\"btn btn-primary me-2\" (click)=\"save()\">Save</button>\r\n            <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}