{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\nlet RequestAddEditComponent = class RequestAddEditComponent {\n  constructor(route, router, accountService) {\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.request = {\n      type: 'Equipment',\n      items: []\n    };\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.isAddMode = !this.id;\n    if (!this.isAddMode) {\n      // Load existing request for editing\n      this.accountService.getRequestById(this.id).pipe(first()).subscribe(request => this.request = request, error => this.errorMessage = error);\n    }\n  }\n  addItem() {\n    this.request.items.push({\n      name: '',\n      quantity: 1\n    });\n  }\n  removeItem(index) {\n    this.request.items.splice(index, 1);\n  }\n  save() {\n    this.errorMessage = '';\n    // Basic validation\n    if (!this.request.type) {\n      this.errorMessage = 'Type is required';\n      return;\n    }\n    if (this.request.items.length === 0) {\n      this.errorMessage = 'At least one item is required';\n      return;\n    }\n    for (const item of this.request.items) {\n      if (!item.name || !item.quantity) {\n        this.errorMessage = 'All items must have a name and quantity';\n        return;\n      }\n    }\n    if (this.isAddMode) {\n      this.createRequest();\n    } else {\n      this.updateRequest();\n    }\n  }\n  createRequest() {\n    this.accountService.createRequest(this.request).pipe(first()).subscribe(() => {\n      this.router.navigate(['/requests'], {\n        state: {\n          message: 'Request created successfully'\n        }\n      });\n    }, error => {\n      var _a;\n      this.errorMessage = ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || error.message;\n    });\n  }\n  updateRequest() {\n    this.accountService.updateRequest(this.id, this.request).pipe(first()).subscribe(() => {\n      this.router.navigate(['/requests'], {\n        state: {\n          message: 'Request updated successfully'\n        }\n      });\n    }, error => {\n      var _a;\n      this.errorMessage = ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || error.message;\n    });\n  }\n  cancel() {\n    this.router.navigate(['/requests']);\n  }\n};\nRequestAddEditComponent = __decorate([Component({\n  templateUrl: 'add-edit.component.html'\n})], RequestAddEditComponent);\nexport { RequestAddEditComponent };","map":{"version":3,"mappings":"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","names":["Component","first","RequestAddEditComponent","constructor","route","router","accountService","type","items","ngOnInit","id","snapshot","params","isAddMode","getRequestById","pipe","subscribe","request","error","errorMessage","addItem","push","name","quantity","removeItem","index","splice","save","length","item","createRequest","updateRequest","navigate","state","message","cancel","templateUrl"],"sourceRoot":"","sources":["E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\requests\\add-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '@app/_services';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit.component.html'\r\n})\r\nexport class RequestAddEditComponent implements OnInit {\r\n  id: string;\r\n  request: any = {\r\n    type: 'Equipment',\r\n    items: []\r\n  };\r\n  errorMessage: string;\r\n  isAddMode: boolean;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    if (!this.isAddMode) {\r\n      // Load existing request for editing\r\n      this.accountService.getRequestById(this.id)\r\n        .pipe(first())\r\n        .subscribe(\r\n          request => this.request = request,\r\n          error => this.errorMessage = error\r\n        );\r\n    }\r\n  }\r\n\r\n  addItem() {\r\n    this.request.items.push({ name: '', quantity: 1 });\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.request.items.splice(index, 1);\r\n  }\r\n\r\n  save() {\r\n    this.errorMessage = '';\r\n\r\n    // Basic validation\r\n    if (!this.request.type) {\r\n      this.errorMessage = 'Type is required';\r\n      return;\r\n    }\r\n\r\n    if (this.request.items.length === 0) {\r\n      this.errorMessage = 'At least one item is required';\r\n      return;\r\n    }\r\n\r\n    for (const item of this.request.items) {\r\n      if (!item.name || !item.quantity) {\r\n        this.errorMessage = 'All items must have a name and quantity';\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.isAddMode) {\r\n      this.createRequest();\r\n    } else {\r\n      this.updateRequest();\r\n    }\r\n  }\r\n\r\n  private createRequest() {\r\n    this.accountService.createRequest(this.request)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.router.navigate(['/requests'], {\r\n            state: { message: 'Request created successfully' }\r\n          });\r\n        },\r\n        error => {\r\n          this.errorMessage = error.error?.message || error.message;\r\n        }\r\n      );\r\n  }\r\n\r\n  private updateRequest() {\r\n    this.accountService.updateRequest(this.id, this.request)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.router.navigate(['/requests'], {\r\n            state: { message: 'Request updated successfully' }\r\n          });\r\n        },\r\n        error => {\r\n          this.errorMessage = error.error?.message || error.message;\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/requests']);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}