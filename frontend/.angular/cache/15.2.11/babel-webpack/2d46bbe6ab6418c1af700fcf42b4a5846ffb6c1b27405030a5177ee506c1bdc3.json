{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction TransferModalComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransferModalComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction TransferModalComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", dept_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r4.name);\n  }\n}\nfunction TransferModalComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 23);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"show d-block\": a0\n  };\n};\nexport let TransferModalComponent = /*#__PURE__*/(() => {\n  class TransferModalComponent {\n    constructor(employeeService, departmentService, alertService) {\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.transferComplete = new EventEmitter();\n      this.departments = [];\n      this.currentDepartmentName = '';\n      this.isOpen = false;\n      this.loading = false;\n      this.error = '';\n    }\n    ngOnInit() {\n      // Load departments on init\n      this.loadDepartments();\n    }\n    open(employeeId) {\n      this.employeeId = employeeId;\n      this.loading = true;\n      this.error = '';\n      this.isOpen = true;\n      // Load employee details\n      this.employeeService.getById(employeeId).pipe(first()).subscribe({\n        next: employee => {\n          this.employee = employee;\n          this.departmentId = Number(employee.departmentId);\n          // Find current department name\n          const currentDept = this.departments.find(d => d.id === Number(employee.departmentId));\n          this.currentDepartmentName = currentDept ? currentDept.name : 'Unknown';\n          this.loading = false;\n        },\n        error: error => {\n          this.error = error;\n          this.loading = false;\n        }\n      });\n    }\n    close() {\n      this.isOpen = false;\n    }\n    loadDepartments() {\n      this.departmentService.getAll().pipe(first()).subscribe({\n        next: departments => this.departments = departments,\n        error: error => this.error = error\n      });\n    }\n    transfer() {\n      if (!this.employee || !this.departmentId) {\n        this.error = 'Employee or department not selected';\n        return;\n      }\n      // Find the new department name for the message\n      const newDepartment = this.departments.find(d => d.id === Number(this.departmentId));\n      const newDepartmentName = newDepartment ? newDepartment.name : 'Unknown';\n      this.loading = true;\n      this.error = '';\n      this.employeeService.transfer(this.employee.id.toString(), this.departmentId).pipe(first()).subscribe({\n        next: response => {\n          // Display the message from the backend\n          this.alertService.success(response.message || 'Department transfer workflow created successfully');\n          this.transferComplete.emit();\n          this.close();\n          this.loading = false;\n        },\n        error: error => {\n          this.error = error;\n          this.loading = false;\n        }\n      });\n    }\n  }\n  TransferModalComponent.ɵfac = function TransferModalComponent_Factory(t) {\n    return new (t || TransferModalComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i1.DepartmentService), i0.ɵɵdirectiveInject(i1.AlertService));\n  };\n  TransferModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferModalComponent,\n    selectors: [[\"app-transfer-modal\"]],\n    inputs: {\n      employeeId: \"employeeId\"\n    },\n    outputs: {\n      transferComplete: \"transferComplete\"\n    },\n    decls: 27,\n    vars: 11,\n    consts: [[\"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\", 3, \"ngClass\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"disabled\", \"click\"], [\"class\", \"modal-backdrop fade show\", 4, \"ngIf\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-sm\"], [1, \"alert\", \"alert-danger\"], [3, \"ngValue\"], [1, \"modal-backdrop\", \"fade\", \"show\"]],\n    template: function TransferModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function TransferModalComponent_Template_button_click_6_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementStart(7, \"span\", 6);\n        i0.ɵɵtext(8, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtemplate(10, TransferModalComponent_div_10_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(11, TransferModalComponent_div_11_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Current Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"New Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function TransferModalComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.departmentId = $event;\n        });\n        i0.ɵɵtemplate(20, TransferModalComponent_option_20_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 15)(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function TransferModalComponent_Template_button_click_22_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(23, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function TransferModalComponent_Template_button_click_24_listener() {\n          return ctx.transfer();\n        });\n        i0.ɵɵtext(25, \"Transfer\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵtemplate(26, TransferModalComponent_div_26_Template, 1, 0, \"div\", 18);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.isOpen));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Transfer Employee: \", ctx.employee == null ? null : ctx.employee.employeeId, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.currentDepartmentName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.departmentId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".btn-close[_ngcontent-%COMP%]{background:none;border:none;font-size:1.5rem;font-weight:700;line-height:1;color:#000;opacity:.5;padding:.25rem .5rem;margin:-.25rem -.5rem -.25rem auto}.btn-close[_ngcontent-%COMP%]:hover{color:#000;opacity:.75}\"]\n  });\n  return TransferModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}