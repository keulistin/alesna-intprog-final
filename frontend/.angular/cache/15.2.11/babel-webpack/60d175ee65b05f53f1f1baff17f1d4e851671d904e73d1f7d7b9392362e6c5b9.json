{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services/request.service\";\nimport * as i4 from \"@app/_services/employee.service\";\nimport * as i5 from \"@app/_services/alert.service\";\nimport * as i6 from \"@angular/common\";\nfunction RequestAddEditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" At least one item is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestAddEditComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestAddEditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RequestAddEditComponent_div_16_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.type.errors.required);\n  }\n}\nfunction RequestAddEditComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emp_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", emp_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", emp_r7.employeeId, \" - \", emp_r7.fullName || emp_r7.email, \" \");\n  }\n}\nfunction RequestAddEditComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestAddEditComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RequestAddEditComponent_div_24_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.employeeId.errors.required);\n  }\n}\nfunction RequestAddEditComponent_div_29_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Item name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestAddEditComponent_div_29_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RequestAddEditComponent_div_29_div_6_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const itemGroup_r9 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = itemGroup_r9.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction RequestAddEditComponent_div_29_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestAddEditComponent_div_29_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestAddEditComponent_div_29_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, RequestAddEditComponent_div_29_div_11_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, RequestAddEditComponent_div_29_div_11_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const itemGroup_r9 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = itemGroup_r9.get(\"quantity\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = itemGroup_r9.get(\"quantity\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.min);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction RequestAddEditComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"div\", 30)(3, \"label\", 31);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 32);\n    i0.ɵɵtemplate(6, RequestAddEditComponent_div_29_div_6_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 30)(8, \"label\", 31);\n    i0.ɵɵtext(9, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 33);\n    i0.ɵɵtemplate(11, RequestAddEditComponent_div_29_div_11_Template, 3, 2, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 34)(13, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function RequestAddEditComponent_div_29_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const i_r10 = restoredCtx.index;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.removeItem(i_r10));\n    });\n    i0.ɵɵtext(14, \" Remove \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const itemGroup_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_7_0;\n    let tmp_8_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r10);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"itemName-\", i_r10, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"itemName-\", i_r10, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r4.submitted && ((tmp_3_0 = itemGroup_r9.get(\"name\")) == null ? null : tmp_3_0.errors)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.submitted && ((tmp_4_0 = itemGroup_r9.get(\"name\")) == null ? null : tmp_4_0.errors));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"itemQuantity-\", i_r10, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"itemQuantity-\", i_r10, \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx_r4.submitted && ((tmp_7_0 = itemGroup_r9.get(\"quantity\")) == null ? null : tmp_7_0.errors)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.submitted && ((tmp_8_0 = itemGroup_r9.get(\"quantity\")) == null ? null : tmp_8_0.errors));\n  }\n}\nfunction RequestAddEditComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 36);\n  }\n}\nexport let RequestAddEditComponent = /*#__PURE__*/(() => {\n  class RequestAddEditComponent {\n    // For dynamic items, request.items will be managed by a FormArray\n    constructor(formBuilder, route, router, requestService,\n    // Use RequestService\n    employeeService,\n    // Use EmployeeService\n    alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.id = null;\n      this.loading = false;\n      this.submitted = false;\n      this.employees = []; // For the employee dropdown\n    }\n\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Initialize the form structure\n      this.form = this.formBuilder.group({\n        type: ['Equipment', Validators.required],\n        employeeId: [null, Validators.required],\n        requestItems: this.formBuilder.array([], Validators.required) // Array for items\n      });\n\n      this.loadEmployeesForDropdown(); // Load employees for the dropdown\n      if (!this.isAddMode && this.id) {\n        this.loadRequestData();\n      } else {\n        // For add mode, add one default item if desired\n        this.addItem();\n      }\n    }\n    // Convenience getter for easy access to form fields in template\n    get f() {\n      return this.form.controls;\n    }\n    // Convenience getter for requestItems FormArray\n    get requestItems() {\n      return this.form.get('requestItems');\n    }\n    loadEmployeesForDropdown() {\n      this.employeeService.getAll() // Assuming getAll returns a list of employees\n      .pipe(first()).subscribe({\n        next: employees => {\n          // Map to a simpler structure if needed, or use employees directly if they have id and a display name\n          this.employees = employees.map(emp => ({\n            id: Number(emp.id),\n            employeeId: emp.employeeId // The display ID like \"EMP001\"\n          }));\n        },\n\n        error: err => {\n          var _a;\n          this.alertService.error(((_a = err.error) === null || _a === void 0 ? void 0 : _a.message) || err.message || 'Failed to load employees');\n        }\n      });\n    }\n    loadRequestData() {\n      if (!this.id) return;\n      this.loading = true;\n      this.requestService.getById(this.id) // Use RequestService\n      .pipe(first()).subscribe({\n        next: request => {\n          this.form.patchValue({\n            type: request.type,\n            employeeId: request.employeeId\n          });\n          // Clear existing items and populate with fetched items\n          this.requestItems.clear();\n          request.requestItems.forEach(item => {\n            this.requestItems.push(this.createItemFormGroup(item.name, item.quantity));\n          });\n          this.loading = false;\n        },\n        error: err => {\n          var _a;\n          this.alertService.error(((_a = err.error) === null || _a === void 0 ? void 0 : _a.message) || err.message || 'Failed to load request');\n          this.loading = false;\n        }\n      });\n    }\n    createItemFormGroup(name = '', quantity = 1) {\n      return this.formBuilder.group({\n        name: [name, Validators.required],\n        quantity: [quantity, [Validators.required, Validators.min(1)]]\n      });\n    }\n    addItem() {\n      this.requestItems.push(this.createItemFormGroup());\n    }\n    removeItem(index) {\n      this.requestItems.removeAt(index);\n    }\n    onSubmit() {\n      var _a;\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        // Mark all fields as touched to show validation errors\n        this.form.markAllAsTouched();\n        // If requestItems is empty after trying to submit, show specific error\n        if (this.requestItems.length === 0 && ((_a = this.form.get('requestItems')) === null || _a === void 0 ? void 0 : _a.hasError('required'))) {\n          this.alertService.error('At least one item is required.');\n        }\n        return;\n      }\n      if (this.loading) return;\n      this.loading = true;\n      const requestData = this.form.value;\n      if (this.isAddMode) {\n        this.createRequest(requestData);\n      } else if (this.id) {\n        this.updateRequest(this.id, requestData);\n      }\n    }\n    createRequest(requestData) {\n      this.requestService.create(requestData) // Use RequestService\n      .pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/admin/requests']); // Adjust path as needed\n        },\n\n        error: err => {\n          var _a;\n          this.alertService.error(((_a = err.error) === null || _a === void 0 ? void 0 : _a.message) || err.message || 'Failed to create request');\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest(id, requestData) {\n      this.requestService.update(id, requestData) // Use RequestService\n      .pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/admin/requests']); // Adjust path as needed\n        },\n\n        error: err => {\n          var _a;\n          this.alertService.error(((_a = err.error) === null || _a === void 0 ? void 0 : _a.message) || err.message || 'Failed to update request');\n          this.loading = false;\n        }\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/admin/requests']); // Adjust path as needed\n    }\n  }\n\n  RequestAddEditComponent.ɵfac = function RequestAddEditComponent_Factory(t) {\n    return new (t || RequestAddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i4.EmployeeService), i0.ɵɵdirectiveInject(i5.AlertService));\n  };\n  RequestAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RequestAddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 38,\n    vars: 18,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger mt-2\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"type\", 1, \"form-label\"], [\"id\", \"type\", \"formControlName\", \"type\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"Equipment\"], [\"value\", \"Leave\"], [\"value\", \"Resources\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"employeeId\", 1, \"form-label\"], [\"id\", \"employeeId\", \"formControlName\", \"employeeId\", 1, \"form-select\", 3, \"ngClass\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-label\"], [\"formArrayName\", \"requestItems\"], [\"class\", \"border p-3 mb-3 rounded\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", \"mt-2\", 3, \"click\"], [1, \"text-center\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class.bind\", \"'spinner-border spinner-border-sm me-1'\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [1, \"alert\", \"alert-danger\", \"mt-2\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"ngValue\"], [1, \"border\", \"p-3\", \"mb-3\", \"rounded\", 3, \"formGroupName\"], [1, \"row\", \"align-items-center\"], [1, \"col-md-5\"], [1, \"form-label\", \"small\", 3, \"for\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", \"form-control-sm\", 3, \"id\", \"ngClass\"], [\"type\", \"number\", \"formControlName\", \"quantity\", 1, \"form-control\", \"form-control-sm\", 3, \"id\", \"ngClass\"], [1, \"col-md-2\", \"d-flex\", \"align-items-end\", \"mt-3\", \"mt-md-0\"], [\"type\", \"button\", \"title\", \"Remove Item\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"w-100\", 3, \"click\"], [\"class.bind\", \"'spinner-border spinner-border-sm me-1'\"]],\n    template: function RequestAddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function RequestAddEditComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(5, RequestAddEditComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 7)(10, \"option\", 8);\n        i0.ɵɵtext(11, \"Equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 9);\n        i0.ɵɵtext(13, \"Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 10);\n        i0.ɵɵtext(15, \"Resources\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, RequestAddEditComponent_div_16_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 5)(18, \"label\", 12);\n        i0.ɵɵtext(19, \"Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"select\", 13)(21, \"option\", 14);\n        i0.ɵɵtext(22, \"Select Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, RequestAddEditComponent_option_23_Template, 2, 3, \"option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, RequestAddEditComponent_div_24_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 16);\n        i0.ɵɵtext(27, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 17);\n        i0.ɵɵtemplate(29, RequestAddEditComponent_div_29_Template, 15, 13, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function RequestAddEditComponent_Template_button_click_30_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(31, \"Add Item\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 20)(33, \"button\", 21);\n        i0.ɵɵtemplate(34, RequestAddEditComponent_span_34_Template, 1, 0, \"span\", 22);\n        i0.ɵɵtext(35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function RequestAddEditComponent_Template_button_click_36_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(37, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.isAddMode ? \"Add\" : \"Edit\", \" Request\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.requestItems.length === 0 && ((tmp_2_0 = ctx.form.get(\"requestItems\")) == null ? null : tmp_2_0.hasError(\"required\")));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.type.errors));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.type.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f.employeeId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.requestItems.controls);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isAddMode ? \"Create\" : \"Save Changes\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    encapsulation: 2\n  });\n  return RequestAddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["Validators","first","i0","RequestAddEditComponent","constructor","formBuilder","route","router","requestService","employeeService","alertService","ngOnInit","id","snapshot","params","isAddMode","form","group","type","required","employeeId","requestItems","array","loadEmployeesForDropdown","loadRequestData","addItem","f","controls","get","getAll","pipe","subscribe","next","employees","map","emp","Number","error","err","message","loading","getById","request","patchValue","clear","forEach","item","push","createItemFormGroup","name","quantity","min","removeItem","index","removeAt","onSubmit","submitted","invalid","markAllAsTouched","length","hasError","requestData","value","createRequest","updateRequest","create","success","keepAfterRouteChange","navigate","update","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\requests\\add-edit.component.ts","E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\requests\\add-edit.component.html"],"sourcesContent":["// src/app/requests/add-edit.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, FormArray, Validators, AbstractControl } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n// Assuming you'll have dedicated services\r\nimport { RequestService } from '@app/_services/request.service'; // Create this service\r\nimport { EmployeeService } from '@app/_services/employee.service'; // Create or use existing\r\nimport { AlertService } from '@app/_services/alert.service';\r\n\r\nimport { AppRequest, EmployeeForDropdown } from '../_helpers/fake-backend'; // Adjust path to your models\r\n\r\n@Component({\r\n  templateUrl: 'add-edit.component.html',\r\n  // Add styleUrls if needed\r\n})\r\nexport class RequestAddEditComponent implements OnInit {\r\n  form!: FormGroup;\r\n  id: string | null = null;\r\n  isAddMode!: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  employees: EmployeeForDropdown[] = []; // For the employee dropdown\r\n\r\n  // For dynamic items, request.items will be managed by a FormArray\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private requestService: RequestService,     // Use RequestService\r\n    private employeeService: EmployeeService,   // Use EmployeeService\r\n    private alertService: AlertService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    // Initialize the form structure\r\n    this.form = this.formBuilder.group({\r\n      type: ['Equipment', Validators.required], // Default to 'Equipment'\r\n      employeeId: [null, Validators.required],  // Employee ID\r\n      requestItems: this.formBuilder.array([], Validators.required) // Array for items\r\n    });\r\n\r\n    this.loadEmployeesForDropdown(); // Load employees for the dropdown\r\n\r\n    if (!this.isAddMode && this.id) {\r\n      this.loadRequestData();\r\n    } else {\r\n      // For add mode, add one default item if desired\r\n      this.addItem();\r\n    }\r\n  }\r\n\r\n  // Convenience getter for easy access to form fields in template\r\n  get f(): { [key: string]: AbstractControl } { return this.form.controls; }\r\n  // Convenience getter for requestItems FormArray\r\n  get requestItems(): FormArray {\r\n    return this.form.get('requestItems') as FormArray;\r\n  }\r\n\r\n  loadEmployeesForDropdown() {\r\n    this.employeeService.getAll() // Assuming getAll returns a list of employees\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (employees) => {\r\n          // Map to a simpler structure if needed, or use employees directly if they have id and a display name\r\n          this.employees = employees.map(emp => ({\r\n            id: Number(emp.id), // Convert ID to number\r\n            employeeId: emp.employeeId // The display ID like \"EMP001\"\r\n          }));\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.alertService.error(err.error?.message || err.message || 'Failed to load employees');\r\n        }\r\n      });\r\n  }\r\n\r\n  loadRequestData() {\r\n    if (!this.id) return;\r\n    this.loading = true;\r\n    this.requestService.getById(this.id) // Use RequestService\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: (request: AppRequest) => {\r\n          this.form.patchValue({\r\n            type: request.type,\r\n            employeeId: request.employeeId\r\n          });\r\n          // Clear existing items and populate with fetched items\r\n          this.requestItems.clear();\r\n          request.requestItems.forEach(item => {\r\n            this.requestItems.push(this.createItemFormGroup(item.name, item.quantity));\r\n          });\r\n          this.loading = false;\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.alertService.error(err.error?.message || err.message || 'Failed to load request');\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  createItemFormGroup(name: string = '', quantity: number = 1): FormGroup {\r\n    return this.formBuilder.group({\r\n      name: [name, Validators.required],\r\n      quantity: [quantity, [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  addItem() {\r\n    this.requestItems.push(this.createItemFormGroup());\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.requestItems.removeAt(index);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.alertService.clear();\r\n\r\n    if (this.form.invalid) {\r\n      // Mark all fields as touched to show validation errors\r\n      this.form.markAllAsTouched();\r\n      // If requestItems is empty after trying to submit, show specific error\r\n      if (this.requestItems.length === 0 && this.form.get('requestItems')?.hasError('required')) {\r\n        this.alertService.error('At least one item is required.');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.loading) return;\r\n\r\n    this.loading = true;\r\n    const requestData: AppRequest = this.form.value as AppRequest;\r\n\r\n    if (this.isAddMode) {\r\n      this.createRequest(requestData);\r\n    } else if (this.id) {\r\n      this.updateRequest(this.id, requestData);\r\n    }\r\n  }\r\n\r\n  private createRequest(requestData: AppRequest) {\r\n    this.requestService.create(requestData) // Use RequestService\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.alertService.success('Request created successfully', { keepAfterRouteChange: true });\r\n          this.router.navigate(['/admin/requests']); // Adjust path as needed\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.alertService.error(err.error?.message || err.message || 'Failed to create request');\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  private updateRequest(id: string, requestData: AppRequest) {\r\n    this.requestService.update(id, requestData) // Use RequestService\r\n      .pipe(first())\r\n      .subscribe({\r\n        next: () => {\r\n          this.alertService.success('Request updated successfully', { keepAfterRouteChange: true });\r\n          this.router.navigate(['/admin/requests']); // Adjust path as needed\r\n        },\r\n        error: (err: HttpErrorResponse) => {\r\n          this.alertService.error(err.error?.message || err.message || 'Failed to update request');\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['/admin/requests']); // Adjust path as needed\r\n  }\r\n}","<div class=\"card\">\r\n  <div class=\"card-header\">{{ isAddMode ? 'Add' : 'Edit' }} Request</div>\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <!-- Global form errors can be shown here via AlertService or a dedicated error display -->\r\n      <!-- <alert></alert> --> <!-- Your global alert component -->\r\n      <div *ngIf=\"submitted && requestItems.length === 0 && form.get('requestItems')?.hasError('required')\"\r\n        class=\"alert alert-danger mt-2\">\r\n        At least one item is required.\r\n      </div>\r\n\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"type\" class=\"form-label\">Type</label>\r\n        <select id=\"type\" formControlName=\"type\" class=\"form-select\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.type.errors }\">\r\n          <option value=\"Equipment\">Equipment</option>\r\n          <option value=\"Leave\">Leave</option>\r\n          <option value=\"Resources\">Resources</option>\r\n          <!-- Add more types as needed -->\r\n        </select>\r\n        <div *ngIf=\"submitted && f.type.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.type.errors.required\">Type is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"employeeId\" class=\"form-label\">Employee</label>\r\n        <select id=\"employeeId\" formControlName=\"employeeId\" class=\"form-select\"\r\n          [ngClass]=\"{ 'is-invalid': submitted && f.employeeId.errors }\">\r\n          <option [ngValue]=\"null\" disabled>Select Employee</option> <!-- Placeholder -->\r\n          <option *ngFor=\"let emp of employees\" [ngValue]=\"emp.id\">\r\n            {{ emp.employeeId }} - {{ emp.fullName || emp.email }}\r\n          </option>\r\n        </select>\r\n        <div *ngIf=\"submitted && f.employeeId.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.employeeId.errors.required\">Employee is required</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Items</label>\r\n        <div formArrayName=\"requestItems\">\r\n          <div *ngFor=\"let itemGroup of requestItems.controls; let i = index\" [formGroupName]=\"i\"\r\n            class=\"border p-3 mb-3 rounded\">\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-5\">\r\n                <label for=\"itemName-{{i}}\" class=\"form-label small\">Name</label>\r\n                <input type=\"text\" id=\"itemName-{{i}}\" formControlName=\"name\" class=\"form-control form-control-sm\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && itemGroup.get('name')?.errors }\">\r\n                <div *ngIf=\"submitted && itemGroup.get('name')?.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"itemGroup.get('name')?.errors?.required\">Item name is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-5\">\r\n                <label for=\"itemQuantity-{{i}}\" class=\"form-label small\">Quantity</label>\r\n                <input type=\"number\" id=\"itemQuantity-{{i}}\" formControlName=\"quantity\"\r\n                  class=\"form-control form-control-sm\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && itemGroup.get('quantity')?.errors }\">\r\n                <div *ngIf=\"submitted && itemGroup.get('quantity')?.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"itemGroup.get('quantity')?.errors?.required\">Quantity is required</div>\r\n                  <div *ngIf=\"itemGroup.get('quantity')?.errors?.min\">Quantity must be at least 1</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-2 d-flex align-items-end mt-3 mt-md-0\">\r\n                <button type=\"button\" class=\"btn btn-danger btn-sm w-100\" (click)=\"removeItem(i)\" title=\"Remove Item\">\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-secondary btn-sm mt-2\" (click)=\"addItem()\">Add Item</button>\r\n      </div>\r\n\r\n      <div class=\"text-center mt-4\">\r\n        <button type=\"submit\" [disabled]=\"loading\" class=\"btn btn-primary me-2\">\r\n          <span *ngIf=\"loading\" class.bind=\"'spinner-border spinner-border-sm me-1'\"></span>\r\n          {{ isAddMode ? 'Create' : 'Save Changes' }}\r\n        </button>\r\n        <button type=\"button\" [disabled]=\"loading\" class=\"btn btn-secondary\" (click)=\"onCancel()\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}