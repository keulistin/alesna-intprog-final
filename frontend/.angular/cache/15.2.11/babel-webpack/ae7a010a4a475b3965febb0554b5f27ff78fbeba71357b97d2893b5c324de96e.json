{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services/account.service\";\nimport * as i4 from \"@app/_services/alert.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddEditEmployeeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditEmployeeComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditEmployeeComponent_div_10_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.employeeId.errors.required);\n  }\n}\nfunction AddEditEmployeeComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" No users available. Please create users first. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", user_r12.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", user_r12.email || \"Unknown Email\", \" (\", user_r12.role === \"Admin\" ? \"Admin User\" : \"Normal User\", \") \");\n  }\n}\nfunction AddEditEmployeeComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"User is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditEmployeeComponent_div_19_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.userId.errors.required);\n  }\n}\nfunction AddEditEmployeeComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditEmployeeComponent_div_24_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.position.errors.required);\n  }\n}\nfunction AddEditEmployeeComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", dept_r15.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r15.name);\n  }\n}\nfunction AddEditEmployeeComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditEmployeeComponent_div_32_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.f.departmentId.errors.required);\n  }\n}\nfunction AddEditEmployeeComponent_div_37_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Hire date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditEmployeeComponent_div_37_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.f.hireDate.errors.required);\n  }\n}\nfunction AddEditEmployeeComponent_div_46_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditEmployeeComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, AddEditEmployeeComponent_div_46_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.f.status.errors.required);\n  }\n}\nfunction AddEditEmployeeComponent_span_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 25);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditEmployeeComponent = /*#__PURE__*/(() => {\n  class AddEditEmployeeComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.employee = {\n        employeeId: '',\n        userId: null,\n        position: '',\n        departmentId: null,\n        hireDate: null,\n        status: 'Active'\n      };\n      this.users = [];\n      this.departments = [];\n      this.errorMessage = '';\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Initialize the form with validation\n      this.form = this.formBuilder.group({\n        employeeId: ['', Validators.required],\n        userId: [null, Validators.required],\n        position: ['', Validators.required],\n        departmentId: [null, Validators.required],\n        hireDate: [null, Validators.required],\n        status: ['Active', Validators.required]\n      });\n      // Load users and departments\n      this.loadUsers();\n      this.loadDepartments();\n      if (this.isAddMode) {\n        // Fetch and pre-fill the next employeeId\n        this.accountService.getNextEmployeeId().pipe(first()).subscribe({\n          next: res => {\n            this.form.patchValue({\n              employeeId: res.employeeId\n            });\n          },\n          error: error => {\n            this.errorMessage = 'Failed to fetch next Employee ID';\n          }\n        });\n      } else {\n        this.loadEmployee();\n      }\n    }\n    // Convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    loadUsers() {\n      this.accountService.getAllUsers().pipe(first()).subscribe({\n        next: users => {\n          console.log('Loaded users:', users);\n          if (Array.isArray(users)) {\n            this.users = users;\n          } else {\n            console.error('Expected users to be an array but got:', typeof users);\n            this.errorMessage = 'Error loading users data';\n            this.users = [];\n          }\n        },\n        error: error => {\n          console.error('Error loading users:', error);\n          this.errorMessage = 'Error loading users data';\n        }\n      });\n    }\n    loadDepartments() {\n      this.accountService.getAllDepartments().pipe(first()).subscribe(departments => this.departments = departments);\n    }\n    loadEmployee() {\n      this.loading = true;\n      this.accountService.getEmployeeById(this.id).pipe(first()).subscribe({\n        next: employee => {\n          // Format hire date to YYYY-MM-DD for the date input\n          if (employee.hireDate) {\n            const date = new Date(employee.hireDate);\n            employee.hireDate = date.toISOString().split('T')[0];\n          }\n          this.form.patchValue(employee);\n          this.loading = false;\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    save() {\n      this.submitted = true;\n      this.alertService.clear();\n      // Stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      if (this.loading) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      const formData = Object.assign({}, this.form.value);\n      // Ensure hireDate is a proper Date object\n      if (formData.hireDate) {\n        formData.hireDate = new Date(formData.hireDate);\n      }\n      this.accountService.createEmployee(formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      const formData = Object.assign({}, this.form.value);\n      // Ensure hireDate is a proper Date object\n      if (formData.hireDate) {\n        formData.hireDate = new Date(formData.hireDate);\n      }\n      this.accountService.updateEmployee(this.id, formData).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    cancel() {\n      if (this.isAddMode) {\n        this.router.navigate(['../'], {\n          relativeTo: this.route\n        });\n      } else {\n        this.router.navigate(['../../'], {\n          relativeTo: this.route\n        });\n      }\n    }\n  }\n  AddEditEmployeeComponent.ɵfac = function AddEditEmployeeComponent_Factory(t) {\n    return new (t || AddEditEmployeeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.AlertService));\n  };\n  AddEditEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditEmployeeComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 53,\n    vars: 36,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"readonly\", \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"formControlName\", \"userId\", 1, \"form-select\", 3, \"disabled\", \"ngClass\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"position\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"departmentId\", 1, \"form-select\", 3, \"ngClass\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"status\", 1, \"form-select\", 3, \"ngClass\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"alert\", \"alert-warning\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditEmployeeComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditEmployeeComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, AddEditEmployeeComponent_div_10_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, AddEditEmployeeComponent_div_14_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementStart(15, \"select\", 10)(16, \"option\", 11);\n        i0.ɵɵtext(17, \"-- Select User --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AddEditEmployeeComponent_option_18_Template, 2, 3, \"option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, AddEditEmployeeComponent_div_19_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 6);\n        i0.ɵɵtext(22, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵtemplate(24, AddEditEmployeeComponent_div_24_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 6);\n        i0.ɵɵtext(27, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"select\", 14)(29, \"option\", 11);\n        i0.ɵɵtext(30, \"-- Select Department --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, AddEditEmployeeComponent_option_31_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, AddEditEmployeeComponent_div_32_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 5)(34, \"label\", 6);\n        i0.ɵɵtext(35, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 15);\n        i0.ɵɵtemplate(37, AddEditEmployeeComponent_div_37_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 5)(39, \"label\", 6);\n        i0.ɵɵtext(40, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"select\", 16)(42, \"option\");\n        i0.ɵɵtext(43, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"option\");\n        i0.ɵɵtext(45, \"Inactive\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(46, AddEditEmployeeComponent_div_46_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 17)(48, \"button\", 18);\n        i0.ɵɵtemplate(49, AddEditEmployeeComponent_span_49_Template, 1, 0, \"span\", 19);\n        i0.ɵɵtext(50, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function AddEditEmployeeComponent_Template_button_click_51_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(52, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Employee\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"readonly\", !ctx.isAddMode)(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.submitted && ctx.f.employeeId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.users.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.users.length === 0)(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, ctx.submitted && ctx.f.userId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.userId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c0, ctx.submitted && ctx.f.position.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, ctx.submitted && ctx.f.departmentId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngValue\", null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.departmentId.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(32, _c0, ctx.submitted && ctx.f.hireDate.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(34, _c0, ctx.submitted && ctx.f.status.errors));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.status.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n  return AddEditEmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}