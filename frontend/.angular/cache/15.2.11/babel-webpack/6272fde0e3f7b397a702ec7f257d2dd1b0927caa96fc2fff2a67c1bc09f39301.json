{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction RequestAddEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction RequestAddEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"div\", 14)(3, \"label\", 5);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function RequestAddEditComponent_div_18_Template_input_ngModelChange_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"label\", 5);\n    i0.ɵɵtext(8, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function RequestAddEditComponent_div_18_Template_input_ngModelChange_9_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.quantity = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 17)(11, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function RequestAddEditComponent_div_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removeItem(i_r3));\n    });\n    i0.ɵɵtext(12, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(13, \"gi \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", item_r2.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", item_r2.quantity);\n  }\n}\nexport let RequestAddEditComponent = /*#__PURE__*/(() => {\n  class RequestAddEditComponent {\n    constructor(route, router, accountService) {\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.request = {\n        type: 'Equipment',\n        items: []\n      };\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      if (!this.isAddMode) {\n        // Load existing request for editing\n        this.accountService.getRequestById(this.id).pipe(first()).subscribe(request => this.request = request, error => this.errorMessage = error);\n      }\n    }\n    addItem() {\n      this.request.items.push({\n        name: '',\n        quantity: 1\n      });\n    }\n    removeItem(index) {\n      this.request.items.splice(index, 1);\n    }\n    save() {\n      this.errorMessage = '';\n      // Basic validation\n      if (!this.request.type) {\n        this.errorMessage = 'Type is required';\n        return;\n      }\n      if (this.request.items.length === 0) {\n        this.errorMessage = 'At least one item is required';\n        return;\n      }\n      for (const item of this.request.items) {\n        if (!item.name || !item.quantity) {\n          this.errorMessage = 'All items must have a name and quantity';\n          return;\n        }\n      }\n      if (this.isAddMode) {\n        this.createRequest();\n      } else {\n        this.updateRequest();\n      }\n    }\n    createRequest() {\n      this.accountService.createRequest(this.request).pipe(first()).subscribe(() => {\n        this.router.navigate(['/requests'], {\n          state: {\n            message: 'Request created successfully'\n          }\n        });\n      }, error => {\n        var _a;\n        this.errorMessage = ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || error.message;\n      });\n    }\n    updateRequest() {\n      this.accountService.updateRequest(this.id, this.request).pipe(first()).subscribe(() => {\n        this.router.navigate(['/requests'], {\n          state: {\n            message: 'Request updated successfully'\n          }\n        });\n      }, error => {\n        var _a;\n        this.errorMessage = ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || error.message;\n      });\n    }\n    cancel() {\n      this.router.navigate(['/requests']);\n    }\n  }\n  RequestAddEditComponent.ɵfac = function RequestAddEditComponent_Factory(t) {\n    return new (t || RequestAddEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService));\n  };\n  RequestAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RequestAddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 26,\n    vars: 4,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"border p-2 mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"border\", \"p-2\", \"mb-2\"], [1, \"row\"], [1, \"col-md-5\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-2\", \"d-flex\", \"align-items-end\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function RequestAddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, RequestAddEditComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RequestAddEditComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.request.type = $event;\n        });\n        i0.ɵɵelementStart(9, \"option\");\n        i0.ɵɵtext(10, \"Equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\");\n        i0.ɵɵtext(12, \"Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\");\n        i0.ɵɵtext(14, \"Resources\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n        i0.ɵɵtext(17, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, RequestAddEditComponent_div_18_Template, 14, 2, \"div\", 7);\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RequestAddEditComponent_Template_button_click_19_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(20, \"Add Item\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function RequestAddEditComponent_Template_button_click_22_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(23, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RequestAddEditComponent_Template_button_click_24_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Request\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.request.type);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.request.items);\n      }\n    },\n    dependencies: [i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgForOf, i4.NgIf],\n    encapsulation: 2\n  });\n  return RequestAddEditComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","i0","RequestAddEditComponent","constructor","route","router","accountService","type","items","ngOnInit","id","snapshot","params","isAddMode","getRequestById","pipe","subscribe","request","error","errorMessage","addItem","push","name","quantity","removeItem","index","splice","save","length","item","createRequest","updateRequest","navigate","state","message","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\requests\\add-edit.component.ts","E:\\semifinals\\groupB-fullstack-app\\frontend\\src\\app\\requests\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from '@app/_services';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit.component.html'\r\n})\r\nexport class RequestAddEditComponent implements OnInit {\r\n  id: string;\r\n  request: any = {\r\n    type: 'Equipment',\r\n    items: []\r\n  };\r\n  errorMessage: string;\r\n  isAddMode: boolean;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n\r\n    if (!this.isAddMode) {\r\n      // Load existing request for editing\r\n      this.accountService.getRequestById(this.id)\r\n        .pipe(first())\r\n        .subscribe(\r\n          request => this.request = request,\r\n          error => this.errorMessage = error\r\n        );\r\n    }\r\n  }\r\n\r\n  addItem() {\r\n    this.request.items.push({ name: '', quantity: 1 });\r\n  }\r\n\r\n  removeItem(index: number) {\r\n    this.request.items.splice(index, 1);\r\n  }\r\n\r\n  save() {\r\n    this.errorMessage = '';\r\n\r\n    // Basic validation\r\n    if (!this.request.type) {\r\n      this.errorMessage = 'Type is required';\r\n      return;\r\n    }\r\n\r\n    if (this.request.items.length === 0) {\r\n      this.errorMessage = 'At least one item is required';\r\n      return;\r\n    }\r\n\r\n    for (const item of this.request.items) {\r\n      if (!item.name || !item.quantity) {\r\n        this.errorMessage = 'All items must have a name and quantity';\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.isAddMode) {\r\n      this.createRequest();\r\n    } else {\r\n      this.updateRequest();\r\n    }\r\n  }\r\n\r\n  private createRequest() {\r\n    this.accountService.createRequest(this.request)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.router.navigate(['/requests'], {\r\n            state: { message: 'Request created successfully' }\r\n          });\r\n        },\r\n        error => {\r\n          this.errorMessage = error.error?.message || error.message;\r\n        }\r\n      );\r\n  }\r\n\r\n  private updateRequest() {\r\n    this.accountService.updateRequest(this.id, this.request)\r\n      .pipe(first())\r\n      .subscribe(\r\n        () => {\r\n          this.router.navigate(['/requests'], {\r\n            state: { message: 'Request updated successfully' }\r\n          });\r\n        },\r\n        error => {\r\n          this.errorMessage = error.error?.message || error.message;\r\n        }\r\n      );\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/requests']);\r\n  }\r\n}","<div class=\"card\">\r\n  <div class=\"card-header\">{{id ? 'Edit' : 'Add'}} Request</div>\r\n  <div class=\"card-body\">\r\n    <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\r\n\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">Type</label>\r\n      <select class=\"form-select\" [(ngModel)]=\"request.type\">\r\n        <option>Equipment</option>\r\n        <option>Leave</option>\r\n        <option>Resources</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">Items</label>\r\n      <div *ngFor=\"let item of request.items; let i = index\" class=\"border p-2 mb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-5\">\r\n            <label class=\"form-label\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.name\">\r\n          </div>\r\n          <div class=\"col-md-5\">\r\n            <label class=\"form-label\">Quantity</label>\r\n            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"item.quantity\">\r\n          </div>\r\n          <div class=\"col-md-2 d-flex align-items-end\">\r\n            <button class=\"btn btn-danger\" (click)=\"removeItem(i)\">Remove</button>gi\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn btn-secondary\" (click)=\"addItem()\">Add Item</button>\r\n    </div>\r\n\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary me-2\" (click)=\"save()\">Save</button>\r\n      <button class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}