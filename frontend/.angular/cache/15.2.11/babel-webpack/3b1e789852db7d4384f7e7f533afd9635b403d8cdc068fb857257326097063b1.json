{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services/account.service\";\nimport * as i4 from \"@app/_services/alert.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddEditDepartmentComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditDepartmentComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditDepartmentComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AddEditDepartmentComponent_div_10_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.name.errors.required);\n  }\n}\nfunction AddEditDepartmentComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditDepartmentComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AddEditDepartmentComponent_div_15_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.description.errors.required);\n  }\n}\nfunction AddEditDepartmentComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditDepartmentComponent = /*#__PURE__*/(() => {\n  class AddEditDepartmentComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.department = {\n        name: '',\n        description: ''\n      };\n      this.errorMessage = '';\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Initialize form with validation\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['', Validators.required]\n      });\n      if (!this.isAddMode) {\n        this.loading = true;\n        this.accountService.getDepartmentById(this.id).pipe(first()).subscribe({\n          next: department => {\n            this.form.patchValue(department);\n            this.loading = false;\n          },\n          error: error => {\n            this.errorMessage = error;\n            this.loading = false;\n          }\n        });\n      }\n    }\n    // Convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    save() {\n      this.submitted = true;\n      this.alertService.clear();\n      // Stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      if (this.loading) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createDepartment();\n      } else {\n        this.updateDepartment();\n      }\n    }\n    createDepartment() {\n      this.accountService.createDepartment(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    updateDepartment() {\n      this.accountService.updateDepartment(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.loading = false;\n        }\n      });\n    }\n    cancel() {\n      if (this.isAddMode) {\n        this.router.navigate(['../'], {\n          relativeTo: this.route\n        });\n      } else {\n        this.router.navigate(['../../'], {\n          relativeTo: this.route\n        });\n      }\n    }\n  }\n  AddEditDepartmentComponent.ɵfac = function AddEditDepartmentComponent_Factory(t) {\n    return new (t || AddEditDepartmentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.AlertService));\n  };\n  AddEditDepartmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditDepartmentComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 22,\n    vars: 13,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"ngClass\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditDepartmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditDepartmentComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditDepartmentComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, AddEditDepartmentComponent_div_10_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵtemplate(15, AddEditDepartmentComponent_div_15_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"button\", 11);\n        i0.ɵɵtemplate(18, AddEditDepartmentComponent_span_18_Template, 1, 0, \"span\", 12);\n        i0.ɵɵtext(19, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AddEditDepartmentComponent_Template_button_click_20_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(21, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Department\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.name.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.description.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.description.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n  return AddEditDepartmentComponent;\n})();","map":{"version":3,"mappings":"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","names":["first","Validators","i0","AddEditDepartmentComponent","constructor","formBuilder","route","router","accountService","alertService","name","description","ngOnInit","id","snapshot","params","isAddMode","form","group","required","loading","getDepartmentById","pipe","subscribe","next","department","patchValue","error","errorMessage","f","controls","save","submitted","clear","invalid","createDepartment","updateDepartment","value","success","keepAfterRouteChange","navigate","relativeTo","cancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\departments\\add-edit.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\departments\\add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AccountService } from '@app/_services/account.service';\r\nimport { AlertService } from '@app/_services/alert.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n\r\n@Component({ templateUrl: 'add-edit.component.html' })\r\n\r\nexport class AddEditDepartmentComponent implements OnInit {\r\n    form!: FormGroup;\r\n    department: any = {\r\n        name: '',\r\n        description: ''\r\n    };\r\n    id: string;\r\n    isAddMode: boolean;\r\n    errorMessage: string = '';\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.isAddMode = !this.id;\r\n\r\n        // Initialize form with validation\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            description: ['', Validators.required]\r\n        });\r\n\r\n        if (!this.isAddMode) {\r\n            this.loading = true;\r\n            this.accountService.getDepartmentById(this.id)\r\n                .pipe(first())\r\n                .subscribe({\r\n                    next: (department) => {\r\n                        this.form.patchValue(department);\r\n                        this.loading = false;\r\n                    },\r\n                    error: (error) => {\r\n                        this.errorMessage = error;\r\n                        this.loading = false;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    // Convenience getter for easy access to form fields\r\n    get f(): { [key: string]: AbstractControl } { return this.form.controls; }\r\n\r\n    save() {\r\n        this.submitted = true;\r\n        this.alertService.clear();\r\n\r\n        // Stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        if (this.loading) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        if (this.isAddMode) {\r\n            this.createDepartment();\r\n        } else {\r\n            this.updateDepartment();\r\n        }\r\n    }\r\n\r\n    private createDepartment() {\r\n        this.accountService.createDepartment(this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Department created successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateDepartment() {\r\n        this.accountService.updateDepartment(this.id, this.form.value)\r\n            .pipe(first())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Department updated successfully', { keepAfterRouteChange: true });\r\n                    this.router.navigate(['../../'], { relativeTo: this.route });\r\n                },\r\n                error: (error) => {\r\n                    this.errorMessage = error;\r\n                    this.loading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    cancel() {\r\n        if (this.isAddMode) {\r\n            this.router.navigate(['../'], { relativeTo: this.route });\r\n        } else {\r\n            this.router.navigate(['../../'], { relativeTo: this.route });\r\n        }\r\n    }\r\n}","<div class=\"card\">\r\n    <div class=\"card-header\">{{id ? 'Edit' : 'Add'}} Department</div>\r\n    <div class=\"card-body\">\r\n        <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\r\n        \r\n        <form [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Name</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\">\r\n                <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.name.errors.required\">Department name is required</div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Description</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"description\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\">\r\n                <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.description.errors.required\">Department description is required</div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"text-center\">\r\n                <button type=\"submit\" class=\"btn btn-primary me-2\" [disabled]=\"loading\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\r\n                    Save\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}