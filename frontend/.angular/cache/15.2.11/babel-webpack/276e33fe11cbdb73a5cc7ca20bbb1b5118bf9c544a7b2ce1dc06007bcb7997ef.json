{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction ForgotPasswordComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_div_8_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_div_8_div_2_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.email);\n  }\n}\nfunction ForgotPasswordComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(formBuilder, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]]\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.accountService.forgotPassword(this.f.email.value).pipe(first(), finalize(() => this.loading = false)).subscribe({\n        next: () => {\n          this.alertService.success('Please check your email for password reset instructions');\n        },\n        error: error => {\n          this.alertService.error(error);\n        }\n      });\n    }\n  }\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n  };\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 15,\n    vars: 7,\n    consts: [[1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \"Forgot Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\");\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, ForgotPasswordComponent_div_8_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"button\", 6);\n        i0.ɵɵtemplate(11, ForgotPasswordComponent_span_11_Template, 1, 0, \"span\", 7);\n        i0.ɵɵtext(12, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"a\", 8);\n        i0.ɵɵtext(14, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f.email.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.RouterLink],\n    encapsulation: 2\n  });\n  return ForgotPasswordComponent;\n})();","map":{"version":3,"mappings":"AACA,SAA+CA,UAAU,QAAQ,gBAAgB;AACjF,SAASC,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;;;;;;;;ICMhCC,2BAAqC;IAAAA,iCAAiB;IAAAA,iBAAM;;;;;IAC5DA,2BAAkC;IAAAA,gCAAgB;IAAAA,iBAAM;;;;;IAF5DA,8BAAkE;IAC9DA,+EAA4D;IAC5DA,+EAAwD;IAC5DA,iBAAM;;;;IAFIA,eAA6B;IAA7BA,qDAA6B;IAC7BA,eAA0B;IAA1BA,kDAA0B;;;;;IAKhCA,2BAA2E;;;;;;;;ADP3F,WAAaC,uBAAuB;EAA9B,MAAOA,uBAAuB;IAKhCC,YACYC,WAA+B,EAC/BC,cAA8B,EAC9BC,YAA0B;MAF1B,gBAAW,GAAXF,WAAW;MACX,mBAAc,GAAdC,cAAc;MACd,iBAAY,GAAZC,YAAY;MANxB,YAAO,GAAG,KAAK;MACf,cAAS,GAAG,KAAK;IAMb;IAEJC,QAAQ;MACJ,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;QAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACY,KAAK,CAAC;OACtD,CAAC;IACN;IAEA;IACA,IAAIE,CAAC;MAAK,OAAO,IAAI,CAACJ,IAAI,CAACK,QAAQ;IAAE;IAErCC,QAAQ;MACJ,IAAI,CAACC,SAAS,GAAG,IAAI;MAErB;MACA,IAAI,CAACT,YAAY,CAACU,KAAK,EAAE;MAEzB;MACA,IAAI,IAAI,CAACR,IAAI,CAACS,OAAO,EAAE;QACnB;;MAGJ,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACb,cAAc,CAACc,cAAc,CAAC,IAAI,CAACP,CAAC,CAACF,KAAK,CAACU,KAAK,CAAC,CACjDC,IAAI,CACDtB,KAAK,EAAE,EACPC,QAAQ,CAAC,MAAM,IAAI,CAACkB,OAAO,GAAG,KAAK,CAAC,CACvC,CACAI,SAAS,CAAC;QACPC,IAAI,EAAE,MAAK;UACP,IAAI,CAACjB,YAAY,CAACkB,OAAO,CAAC,yDAAyD,CAAC;QACxF,CAAC;QACDC,KAAK,EAAEA,KAAK,IAAG;UACX,IAAI,CAACnB,YAAY,CAACmB,KAAK,CAACA,KAAK,CAAC;QAClC;OACH,CAAC;IACV;;;qBA7CSvB,uBAAuB;EAAA;;UAAvBA,uBAAuB;IAAAwB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCPpC7B,6BAAwB;QAAAA,+BAAe;QAAAA,iBAAK;QAC5CA,8BAAuB;QACMA;UAAA,OAAY8B,cAAU;QAAA,EAAC;QAC5C9B,8BAAwB;QACbA,qBAAK;QAAAA,iBAAQ;QACpBA,2BACgE;QAChEA,wEAGM;QACVA,iBAAM;QACNA,8BAAwB;QAEhBA,4EAA2E;QAC3EA,yBACJ;QAAAA,iBAAS;QACTA,6BAA8C;QAAAA,uBAAM;QAAAA,iBAAI;;;QAf1DA,eAAkB;QAAlBA,oCAAkB;QAIZA,eAAyD;QAAzDA,yFAAyD;QACvDA,eAAiC;QAAjCA,0DAAiC;QAM/BA,eAAoB;QAApBA,sCAAoB;QACjBA,eAAa;QAAbA,kCAAa;;;;;;SDPvBC,uBAAuB;AAAA","names":["Validators","first","finalize","i0","ForgotPasswordComponent","constructor","formBuilder","accountService","alertService","ngOnInit","form","group","email","required","f","controls","onSubmit","submitted","clear","invalid","loading","forgotPassword","value","pipe","subscribe","next","success","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\account\\forgot-password.component.ts","C:\\xampp\\htdocs\\groupB-fullstack-app\\frontend\\src\\app\\account\\forgot-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { first, finalize } from 'rxjs/operators';\r\n\r\nimport { AccountService, AlertService } from '@app/_services';\r\n\r\n@Component({ templateUrl: 'forgot-password.component.html' })\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    form: UntypedFormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private accountService: AccountService,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]]\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.form.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // reset alerts on submit\r\n        this.alertService.clear();\r\n\r\n        // stop here if form is invalid\r\n        if (this.form.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n        this.accountService.forgotPassword(this.f.email.value)\r\n            .pipe(\r\n                first(),\r\n                finalize(() => this.loading = false)\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alertService.success('Please check your email for password reset instructions');\r\n                },\r\n                error: error => {\r\n                    this.alertService.error(error);\r\n                }\r\n            });\r\n    }\r\n}","<h3 class=\"card-header\">Forgot Password</h3>\r\n<div class=\"card-body\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                <div *ngIf=\"f.email.errors.email\">Email is invalid</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                Submit\r\n            </button>\r\n            <a routerLink=\"../login\" class=\"btn btn-link\">Cancel</a>\r\n        </div>\r\n    </form>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}